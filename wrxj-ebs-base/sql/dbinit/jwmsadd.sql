REM jwmsadd.sql - file to create oracle database tables
SPOOL jwmsadd.LOG
SET SQLBLANKLINES ON;

rem @create_table_space_DOS.sql
rem @create_table_space_UNIX.sql

REM ---------------------------------------------------------------------------
REM ---------------------------- Add Tables Section ---------------------------
REM------- TABLES WITH FOREIGN KEY DEPENDENCIES ARE IN A SECTION BELOW --------
REM ---------------------------------------------------------------------------


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding ASRSMETADATA                +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE ASRSMETADATA
(
    iID            NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sDataViewName  VARCHAR(25) CONSTRAINT md_nn_sDataViewName NOT NULL,
    sColumnName    VARCHAR(35) CONSTRAINT md_nn_sColumnName   NOT NULL,
    sFullName      VARCHAR(40) NULL,
    sIsTranslation VARCHAR(1)  DEFAULT 'N',
    iDisplayOrder  INTEGER     CONSTRAINT md_nn_iDisplayOrder NOT NULL,

    dModifyTime    TIMESTAMP(6),
    sAddMethod     VARCHAR2(2000),
    sUpdateMethod  VARCHAR2(2000),

    CONSTRAINT md_pk PRIMARY KEY (sDataViewName, sColumnName)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;

COMMENT ON COLUMN ASRSMETADATA.sDataViewName
    IS 'Name of the Meta Data scheme. Each table can have many display schemes';
COMMENT ON COLUMN ASRSMETADATA.iDisplayOrder
    IS 'Value of -1 means don not display.';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding CARRIER                     +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE CARRIER
(
    iID             NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sCarrierID      VARCHAR(6)    CONSTRAINT ca_nn_sCarrierID NOT NULL,
    sCarrierName    VARCHAR(20)   NULL,
    sCarrierContact VARCHAR(25)   NULL,
    sCarrierPhone   VARCHAR(20)   NULL,
    sStationName    VARCHAR(4)    NULL,

    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT ca_uk UNIQUE (sCarrierID)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding CONTAINERTYPE               +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE CONTAINERTYPE
(
    iID             NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sContainerType  VARCHAR(15)   CONSTRAINT ct_nn_sContainerType NOT NULL,
    fWeight         NUMERIC(13,3) DEFAULT 0.0,
    fMaxWeight      NUMERIC(13,3) DEFAULT 0.0,
    fContLength     NUMERIC(13,3) DEFAULT 0.0,
    fContWidth      NUMERIC(13,3) DEFAULT 0.0,
    fContHeight     NUMERIC(13,3) DEFAULT 0.0,

    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT ct_pk PRIMARY KEY (sContainerType)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;

COMMENT ON TABLE CONTAINERTYPE IS 'Used to differentiate between different types of loads';
COMMENT ON COLUMN CONTAINERTYPE.sContainerType
    IS 'A description of what we are storing items in or on.';
COMMENT ON COLUMN CONTAINERTYPE.fWeight
    IS 'Weight of the container itself.';
COMMENT ON COLUMN CONTAINERTYPE.fMaxWeight
    IS 'Max weight that can be in or on this container type.';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding CONTROLLERCONFIG            +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE CONTROLLERCONFIG
(
    iID                   NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sController           VARCHAR(50)   CONSTRAINT cc_nn_sController    NOT NULL,
    sPropertyName         VARCHAR(50)   CONSTRAINT cc_nn_sPropertyName  NOT NULL,
    sPropertyValue        VARCHAR(100)  CONSTRAINT cc_nn_sPropertyValue NOT NULL,
    sPropertyDesc         VARCHAR(200),
    iScreenChangeAllowed  INTEGER DEFAULT 1
                                  CONSTRAINT cc_ch_iScreenChangeAllowed CHECK (iScreenChangeAllowed IN (1, 2))
                                  CONSTRAINT cc_nn_iScreenChangeAllowed NOT NULL,

    iEnabled              INTEGER DEFAULT 1
                                  CONSTRAINT cc_ch_iEnabled CHECK (iEnabled IN (1, 2))
                                  CONSTRAINT cc_nn_iEnabled NOT NULL,
    dModifyTime           TIMESTAMP(6),
    sAddMethod            VARCHAR2(2000),
    sUpdateMethod         VARCHAR2(2000),

    CONSTRAINT cc_pk PRIMARY KEY (sController, sPropertyName)
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding CUSTOMER                    +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE CUSTOMER
(
    iID             NUMBER       GENERATED BY DEFAULT AS IDENTITY,
    sCustomer       VARCHAR(15)  CONSTRAINT ci_nn_sCustomer NOT NULL,
    sDescription1   VARCHAR(40)  NULL,
    sDescription2   VARCHAR(40)  NULL,
    sStreetAddress1 VARCHAR(40)  NULL,
    sStreetAddress2 VARCHAR(40)  NULL,
    sCity           VARCHAR(30)  NULL,
    sState          VARCHAR(30)  NULL,
    sZipcode        VARCHAR(12)  NULL,
    sCountry        VARCHAR(30)  NULL,
    sPhone          VARCHAR(40)  NULL,
    sAttention      VARCHAR(30)  NULL,
    sContact        VARCHAR(30)  NULL,
    sNote           VARCHAR(30)  NULL,
    iDeleteOnUse    INTEGER      DEFAULT 2
                                 CONSTRAINT ci_ch_iDeleteOnUse CHECK (iDeleteOnUse IN (1, 2))
                                 CONSTRAINT ci_nn_iDeleteOnUse NOT NULL,
    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT ci_pk UNIQUE (sCustomer) USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;

COMMENT ON TABLE CUSTOMER IS 'This table is used to hold information about the customer.';
COMMENT ON COLUMN CUSTOMER.sCustomer
    IS 'Unique Customer name or indentifier.';
COMMENT ON COLUMN CUSTOMER.sDescription1
    IS 'A description of the customer.';
COMMENT ON COLUMN CUSTOMER.sDescription2
    IS 'A description of the customer.';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding TRANSACTIONHISTORY          +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE TRANSACTIONHISTORY
(
  iID                 NUMBER        GENERATED BY DEFAULT AS IDENTITY,
  iTranCategory       INTEGER       CONSTRAINT th_ch_iTranCategory CHECK (iTranCategory BETWEEN 770 AND 774)
                                    CONSTRAINT th_nn_iTranCategory NOT NULL,
  iTranType           INTEGER       CONSTRAINT th_ch_iTranType     CHECK (iTranType BETWEEN 880 AND 913)
                                    CONSTRAINT th_nn_iTranType     NOT NULL,
  dTransDateTime      TIMESTAMP     DEFAULT SYSTIMESTAMP,
  sMachineName        VARCHAR(30)   NULL,
  sItem               VARCHAR(30)   NULL,
  sLot                VARCHAR(30)   NULL,
  sLoadID             VARCHAR(8)    NULL,
  sToLoad             VARCHAR(8)    NULL,
  SLocation           VARCHAR(13)   NULL,
  SToLocation         VARCHAR(13)   NULL,
  sStation            VARCHAR(4)    NULL,
  sToStation          VARCHAR(4)    NULL,
  sDeviceID           VARCHAR(9)    NULL,
  sRouteID            VARCHAR(12)   NULL,
  iAisleGroup         INTEGER       NULL,
  sUserID             VARCHAR(13)   NULL,
  sRole               VARCHAR(20)   NULL,
  sCustomer           VARCHAR(15)   NULL,
  sCarrierID          VARCHAR(6)    NULL,
  dLastCCIDate        TIMESTAMP     NULL,
  dShipDate           TIMESTAMP     NULL,
  dAgingDate          TIMESTAMP     NULL,
  dExpirationDate     TIMESTAMP     NULL,
  fCurrentQuantity    NUMERIC(13,3) NULL,
  fExpectedQuantity   NUMERIC(13,3) NULL,
  fAdjustedQuantity   NUMERIC(13,3) NULL,
  fReceivedQuantity   NUMERIC(13,3) NULL,
  fPickQuantity       NUMERIC(13,3) NULL,
  sOrderID            VARCHAR(30)   NULL,
  sLineID             VARCHAR(12)   NULL,
  sOrderLot           VARCHAR(30)   NULL,
  iOrderType          INTEGER       NULL,
  iHoldType           INTEGER       NULL,
  sReasonCode         VARCHAR(3)    NULL,
  sActionDescription  VARCHAR(300)  NULL,

  dModifyTime         TIMESTAMP(6),
  sAddMethod          VARCHAR2(2000),
  sUpdateMethod       VARCHAR2(2000)
) TABLESPACE WRxJData;

COMMENT ON TABLE TRANSACTIONHISTORY IS 'Transactions in the system.';
COMMENT ON COLUMN TRANSACTIONHISTORY.dTransDateTime
    IS 'The data and time this transaction was done.';

CREATE INDEX TH_DTRANSDATETIME ON TRANSACTIONHISTORY(DTRANSDATETIME, iID) TABLESPACE WRxJIndex;


PROMPT +++++++++++++++++++++++++++++++++++++
PROMPT +         Adding JVMCONFIG          +
PROMPT +++++++++++++++++++++++++++++++++++++

CREATE TABLE JVMCONFIG
(
    iID             NUMBER       GENERATED BY DEFAULT AS IDENTITY,
    sJVMIdentifier  VARCHAR(30)  CONSTRAINT jvm_nn_sJVMIdentifier NOT NULL,
    iJVMType        INTEGER      DEFAULT 561
                                 CONSTRAINT jvm_ch_iJVMType CHECK (iJVMType IN (560, 561))
                                 CONSTRAINT jvm_nn_iJVMType NOT NULL,
    iJVMStatus      INTEGER      DEFAULT 460
                                 CONSTRAINT jvm_ch_iJVMStatus CHECK (iJVMStatus BETWEEN 460 AND 462)
                                 CONSTRAINT jvm_nn_iJVMStatus   NOT NULL,
    sServerName     VARCHAR(20)  CONSTRAINT jvm_nn_sServerName  NOT NULL,
    sJMSTopic       VARCHAR(30) CONSTRAINT jvm_nn_sJMSTopic    NOT NULL,

    dModifyTime         TIMESTAMP(6),
    sAddMethod          VARCHAR2(2000),
    sUpdateMethod       VARCHAR2(2000),

    CONSTRAINT jvm_pk PRIMARY KEY (sJVMIdentifier) USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT jvm_uk UNIQUE (sJMSTopic)
                     USING INDEX TABLESPACE WRxJIndex

) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding DEVICE                      +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE DEVICE
(
    iID                 NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sDeviceID           VARCHAR(9)  CONSTRAINT dv_nn_sDeviceID NOT NULL,
    iDeviceType         INTEGER     DEFAULT 183
                                    CONSTRAINT dv_ch_iDeviceType CHECK (iDeviceType BETWEEN 179 AND 193)
                                    CONSTRAINT dv_nn_iDeviceType NOT NULL,
    iAisleGroup         INTEGER     DEFAULT 0,
    sCommDevice         VARCHAR(9)  NULL,
    iOperationalStatus  INTEGER     DEFAULT 187
                                    CONSTRAINT dv_ch_iOperationalStatus CHECK (iOperationalStatus BETWEEN 186 AND 188)
                                    CONSTRAINT dv_nn_iOperationalStatus NOT NULL,
    iPhysicalStatus     INTEGER     DEFAULT 234
                                    CONSTRAINT dv_ch_iPhysicalStatus CHECK (iPhysicalStatus BETWEEN 233 AND 236)
                                    CONSTRAINT dv_nn_iPhysicalStatus NOT NULL,
    iEmulationMode      INTEGER     DEFAULT 196
                                    CONSTRAINT dv_ch_iEmulationMode CHECK (iEmulationMode BETWEEN 195 AND 198)
                                    CONSTRAINT dv_nn_iEmulationMode NOT NULL,
    sCommSendPort       VARCHAR(20) NULL,
    sCommReadPort       VARCHAR(20) NULL,
    sErrorCode          VARCHAR(6)  NULL,
    sNextDevice         VARCHAR(9)  NULL,
    iDeviceToken        INTEGER     DEFAULT 236
                                    CONSTRAINT dv_ch_iDeviceToken CHECK (iDeviceToken IN (235, 236))
                                    CONSTRAINT dv_nn_iDeviceToken NOT NULL,
    sSchedulerName      VARCHAR(15) NULL,
    sAllocatorName      VARCHAR(35) NULL,
    sStationName        VARCHAR(4)  NULL,
    sUserID             VARCHAR(13) NULL,
    sPrinter            VARCHAR(40) NULL,
    sWarehouse          VARCHAR(3)  NULL,
    sJVMIdentifier      VARCHAR(30) NULL,   -- The JVM to which this device
                                            -- belongs on split systems.

    dModifyTime         TIMESTAMP(6),
    sAddMethod          VARCHAR2(2000),
    sUpdateMethod       VARCHAR2(2000),

    CONSTRAINT dv_pk PRIMARY KEY (sDeviceID) USING INDEX TABLESPACE WRxJIndex

) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding HOSTTOWRX                   +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE HOSTTOWRX
(
    iID                 NUMBER       GENERATED BY DEFAULT AS IDENTITY,
    sHostName           VARCHAR(25)  CONSTRAINT hi_nn_sHostName NOT NULL,
    dMessageAddTime     TIMESTAMP(6) DEFAULT SYSTIMESTAMP,
    iMessageSequence    INTEGER      CONSTRAINT hi_nn_iMessageSequence NOT NULL,
    iOriginalSequence   INTEGER      NULL,
    sMessageIdentifier  VARCHAR(50)  CONSTRAINT hi_nn_sMessageIdentifier NOT NULL,
    sMessage            CLOB         DEFAULT EMPTY_CLOB(),
    iMessageProcessed   INTEGER      DEFAULT 2
                                     CONSTRAINT hi_ch_iMessageProcessed CHECK (iMessageProcessed IN (1, 2, 3)),

    dModifyTime         TIMESTAMP(6),
    sAddMethod          VARCHAR2(2000),
    sUpdateMethod       VARCHAR2(2000),

    CONSTRAINT hi_pk PRIMARY KEY (iMessageSequence, sHostName)
                     USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT hi_uk UNIQUE (iMessageProcessed, iMessageSequence, sHostName)
                     USING INDEX TABLESPACE WRxJIndex

) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding Host Configuration          +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE HOSTCONFIG
(
    iID                NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sDataHandler       VARCHAR(40)   CONSTRAINT hst_nn_sDataHandler    NOT NULL,
    sGroup             VARCHAR(40)   CONSTRAINT hst_nn_sGroup          NOT NULL,
    sParameterName     VARCHAR(40)   CONSTRAINT hst_nn_sParameterName  NOT NULL,
    sParameterValue    VARCHAR(100)  CONSTRAINT hst_nn_sParameterValue NOT NULL,
    iActiveConfig      INTEGER       DEFAULT 2
                                     CONSTRAINT hst_ch_iActiveConfig CHECK (iActiveConfig IN (1, 2)),
    dModifyTime        TIMESTAMP(6),
    sAddMethod         VARCHAR2(2000),
    sUpdateMethod      VARCHAR2(2000),

    CONSTRAINT hst_pk PRIMARY KEY (sDataHandler, sParameterName, sParameterValue)
                      USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding HostAccess                  +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE HOSTOUTACCESS
(
    iID                 NUMBER       GENERATED BY DEFAULT AS IDENTITY,
    sHostName           VARCHAR(25)  CONSTRAINT ha_nn_sHostName          NOT NULL,
    sMessageIdentifier  VARCHAR(50)  CONSTRAINT ha_nn_sMessageIdentifier NOT NULL,
    iEnabled            INTEGER      DEFAULT 1
                                     CONSTRAINT ha_nn_iEnabled           NOT NULL,
    dModifyTime         TIMESTAMP(6),
    sAddMethod          VARCHAR2(2000),
    sUpdateMethod       VARCHAR2(2000),

    CONSTRAINT ha_pk PRIMARY KEY (sHostName, sMessageIdentifier)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding ITEMMASTER                  +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE ITEMMASTER
(
    iID                   NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sItem                 VARCHAR(30)   CONSTRAINT im_nn_sItem NOT NULL,
    sDescription          VARCHAR(40)   NULL,
    sRecommendedWarehouse VARCHAR(3)    NULL,
    sRecommendedZone      VARCHAR(3)    NULL,
    iHoldType             INTEGER       DEFAULT 168
                                        CONSTRAINT im_ch_iHoldType CHECK (iHoldType IN (168, 169, 170))
                                        CONSTRAINT im_nn_iHoldType NOT NULL,
    iDeleteAtZeroQuantity INTEGER       DEFAULT 2
                                        CONSTRAINT im_ch_iDeleteAtZeroQuantity CHECK (iDeleteAtZeroQuantity IN (1, 2))
                                        CONSTRAINT im_nn_iDeleteAtZeroQuantity NOT NULL,
    dLastCCIDate          TIMESTAMP     DEFAULT SYSTIMESTAMP,
    iPiecesPerUnit        INTEGER       DEFAULT 1
                                        CONSTRAINT im_nn_iPiecesPerUnit NOT NULL,
    fCCIPointQuantity     NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT im_nn_fCCIPointQuantity NOT NULL,
    fDefaultLoadQuantity  NUMERIC(13,3) DEFAULT 1.0
                                        CONSTRAINT im_nn_fDefaultLoadQuantity NOT NULL,
    sOrderRoute           VARCHAR(12)   NULL,
    fItemWeight           NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT im_nn_fItemWeight NOT NULL,
    fItemLength           NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT im_nn_fItemLength NOT NULL,
    fItemHeight           NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT im_nn_fItemHeight NOT NULL,
    fItemWidth            NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT im_nn_fItemWidth  NOT NULL,
    fCaseWeight           NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT im_nn_fCaseWeight NOT NULL,
    fCaseLength           NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT im_nn_fCaseLength NOT NULL,
    fCaseHeight           NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT im_nn_fCaseHeight NOT NULL,
    fCaseWidth            NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT im_nn_fCaseWidth  NOT NULL,
    iExpirationRequired   INTEGER       DEFAULT 2
                                        CONSTRAINT im_ch_iExpirationRequired CHECK (iExpirationRequired IN (1, 2))
                                        CONSTRAINT im_nn_iExpirationRequired NOT NULL,
    iStorageFlag          INTEGER       DEFAULT 242
                                        CONSTRAINT im_ch_iStorageFlag CHECK (iStorageFlag BETWEEN 242 AND 245)
                                        CONSTRAINT im_nn_iStorageFlag NOT NULL,
    dModifyTime           TIMESTAMP(6),
    sAddMethod            VARCHAR2(2000),
    sUpdateMethod         VARCHAR2(2000),

    CONSTRAINT im_pk PRIMARY KEY (sItem) USING INDEX TABLESPACE WRxJIndex

) TABLESPACE WRxJData;

COMMENT ON TABLE ITEMMASTER IS 'Item Master Table';
COMMENT ON COLUMN ITEMMASTER.iHoldType IS 'Used in Building PO.';
COMMENT ON COLUMN ITEMMASTER.iExpirationRequired IS 'Used when building PO.';
COMMENT ON COLUMN ITEMMASTER.iStorageFlag IS 'Used in the ARC 9y Message Set.';
COMMENT ON COLUMN ITEMMASTER.fDefaultLoadQuantity IS 'Used in Sim Utilities.';
COMMENT ON COLUMN ITEMMASTER.sOrderRoute IS 'Used in Sim Utilities.';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding LOADWORD                    +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE LOADWORD
(
    iID             NUMBER       GENERATED BY DEFAULT AS IDENTITY,
    iWordSequence   INTEGER      DEFAULT 0
                                 CONSTRAINT lw_nn_iWordSequence NOT NULL,
    sLoadWord       VARCHAR(4)   CONSTRAINT lw_nn_sLoadWord     NOT NULL,

    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT lw_uk UNIQUE (iWordSequence)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding MOVE                        +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE MOVE
(
    iID             NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    iMoveID         INTEGER       CONSTRAINT mv_nn_iMoveID NOT NULL,
    sParentLoad     VARCHAR(8)    CONSTRAINT mv_nn_sParentLoad NOT NULL,
    sLoadID         VARCHAR(8)    CONSTRAINT mv_nn_sLoadID NOT NULL,
    sItem           VARCHAR(30)   NULL,
    sPickLot        VARCHAR(30)   NULL,
    sOrderLot       VARCHAR(30)   NULL,
    fPickQuantity   NUMERIC(13,3) DEFAULT 0.0
                                  CONSTRAINT mv_nn_fPickQuantity NOT NULL,
    iPriority       INTEGER       DEFAULT 7
                                  CONSTRAINT mv_nn_iPriority NOT NULL,
    sOrderID        VARCHAR(30)   NULL,
    sRouteID        VARCHAR(12)   NULL,
    iMoveCategory   INTEGER       DEFAULT 129
                                  CONSTRAINT mv_ch_iMoveCategory CHECK (iMoveCategory BETWEEN 125 AND 129)
                                  CONSTRAINT mv_nn_iMoveCategory NOT NULL,
    iMoveType       INTEGER       DEFAULT 61
                                  CONSTRAINT mv_ch_iMoveType CHECK (iMoveType BETWEEN 60 AND 64)
                                  CONSTRAINT mv_nn_iMoveType NOT NULL,
    iMoveStatus     INTEGER       DEFAULT 32
                                  CONSTRAINT mv_ch_iMoveStatus CHECK (iMoveStatus IN (32, 33))
                                  CONSTRAINT mv_nn_iMoveStatus NOT NULL,
    dMoveDate       TIMESTAMP     DEFAULT SYSTIMESTAMP,
    sPickToLoadID   VARCHAR(8)    NULL,
    sLineID         VARCHAR(12)   NULL,
    sPositionID     VARCHAR(3)    NULL,
    sDeviceID       VARCHAR(9)    NULL,
    sDestWarehouse  VARCHAR(3)    NULL,
    sDestAddress    VARCHAR(9)    NULL,
    sNextWarehouse  VARCHAR(3)    NULL,
    sNextAddress    VARCHAR(9)    NULL,

    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT mv_pk PRIMARY KEY (iMoveID) USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding PORT                        +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE PORT
(
    iID                   NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sPortName             VARCHAR(20) CONSTRAINT pt_nn_sPortName NOT NULL,
    sDeviceID             VARCHAR(9)  CONSTRAINT pt_nn_sDeviceID NOT NULL,
    iDirection            INTEGER     DEFAULT 103
                                      CONSTRAINT pt_ch_iDirection CHECK (iDirection IN (101, 102, 103))
                                      CONSTRAINT pt_nn_iDirection NOT NULL,
    iLastSequence         INTEGER     DEFAULT 0,
    iCommunicationMode    INTEGER     DEFAULT 182
                                      CONSTRAINT pt_ch_iCommunicationMode CHECK (iCommunicationMode IN (182, 183))
                                      CONSTRAINT pt_nn_iCommunicationMode NOT NULL,
    sServerName           VARCHAR(20) CONSTRAINT pt_nn_sServerName NOT NULL,
    sSocketNumber         VARCHAR(4)  CONSTRAINT pt_nn_sSocketNumber NOT NULL,
    iRetryInterval        INTEGER     DEFAULT 5000
                                      CONSTRAINT pt_nn_iRetryInterval NOT NULL,
    iSndKeepAliveInterval INTEGER     DEFAULT 60000
                                      CONSTRAINT pt_nn_iSndKeepAliveInterval NOT NULL,
    iRcvKeepAliveInterval INTEGER     DEFAULT 70000
                                      CONSTRAINT pt_nn_iRcvKeepAliveInterval NOT NULL,
    dModifyTime           TIMESTAMP(6),
    sAddMethod            VARCHAR2(2000),
    sUpdateMethod         VARCHAR2(2000),

    CONSTRAINT pt_pk PRIMARY KEY (sPortName, sDeviceID) USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;
COMMENT ON COLUMN PORT.iSndKeepAliveInterval
    IS 'Keep-Alive interval in ms, WRx -> Device (0 = no keep-alive)';
COMMENT ON COLUMN PORT.iRcvKeepAliveInterval
    IS 'Keep-Alive interval, Device -> WRx (0 = no keep-alive)';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding PURCHASEORDERHEADER         +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE PURCHASEORDERHEADER
(
    iID                  NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sOrderID             VARCHAR(30) CONSTRAINT eh_nn_sOrderID NOT NULL,
    dExpectedDate        TIMESTAMP   DEFAULT SYSTIMESTAMP,
    iPurchaseOrderStatus INTEGER     DEFAULT 24
                                     CONSTRAINT eh_ch_iPurchaseOrderStatus CHECK (iPurchaseOrderStatus BETWEEN 24 AND 31)
                                     CONSTRAINT eh_nn_iPurchaseOrderStatus NOT NULL,
    sStoreStation        VARCHAR(4)  NULL,
    sVendorID            VARCHAR(15) NULL,
    dLastActivityTime    TIMESTAMP   DEFAULT SYSTIMESTAMP,
    iHostLineCount       INTEGER     DEFAULT 1
                                     CONSTRAINT eh_nn_iHostLineCount NOT NULL,
    dModifyTime          TIMESTAMP(6),
    sAddMethod           VARCHAR2(2000),
    sUpdateMethod        VARCHAR2(2000),

    CONSTRAINT eh_pk PRIMARY KEY (sOrderID)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding REASONCODE                  +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE REASONCODE
(
    iID             NUMBER          GENERATED BY DEFAULT AS IDENTITY,
    iReasonCategory INTEGER         DEFAULT 10
                                    CONSTRAINT rc_ch_iReasonCategory CHECK ( iReasonCategory BETWEEN 10 AND 12)
                                    CONSTRAINT rc_nn_iReasonCategory NOT NULL,
    sReasonCode     VARCHAR(3)      CONSTRAINT rc_nn_sReasonCode     NOT NULL,
    sDescription    VARCHAR(40)     NULL,

    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT rc_pk PRIMARY KEY (iReasonCategory, sReasonCode)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding ROLE                        +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE ROLE
(
    iID               NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sRole             VARCHAR(20)   CONSTRAINT rl_nn_sRole NOT NULL,
    sRoleDescription  VARCHAR(40)   CONSTRAINT rl_nn_sRoleDescription NOT NULL,
    iRoleType         INTEGER       DEFAULT 55
                                    CONSTRAINT rl_ch_iRoleType CHECK (iRoleType IN (55, 56, 57))
                                    CONSTRAINT rl_nn_iRoleType NOT NULL,
    dModifyTime       TIMESTAMP(6),
    sAddMethod        VARCHAR2(2000),
    sUpdateMethod     VARCHAR2(2000),

    CONSTRAINT rl_pk PRIMARY KEY (sRole) USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding ROUTE                       +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE ROUTE
(
    iID                  NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sRouteID             VARCHAR(12) CONSTRAINT rt_nn_sRouteID    NOT NULL,
    sFromID              VARCHAR(4)  CONSTRAINT rt_nn_sFromID     NOT NULL,
    sDestID              VARCHAR(4)  CONSTRAINT rt_nn_sDestID     NOT NULL,
    iFromType            INTEGER     DEFAULT 232
                                     CONSTRAINT rt_ch_iFromType   CHECK (iFromType IN (231, 232, 233))
                                     CONSTRAINT rt_nn_iFromType   NOT NULL,
    iDestType            INTEGER     DEFAULT 232
                                     CONSTRAINT rt_ch_iDestType   CHECK (iDestType IN (231, 232, 233))
                                     CONSTRAINT rt_nn_iDestType   NOT NULL,
    iRouteOnOff          INTEGER     DEFAULT 35
                                     CONSTRAINT rt_ch_iRouteOnOff CHECK (iRouteOnOff IN (35, 36)),
    dModifyTime          TIMESTAMP(6),
    sAddMethod           VARCHAR2(2000),
    sUpdateMethod        VARCHAR2(2000),

    CONSTRAINT rt_uk UNIQUE (sRouteID, sFromID, sDestID)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding STATION                     +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE STATION
(
    iID                   NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sStationName          VARCHAR(4)    CONSTRAINT st_nn_sStationName     NOT NULL,
    sWarehouse            VARCHAR(3)    CONSTRAINT st_nn_sWarehouse       NOT NULL,
    sDescription          VARCHAR(40)   NULL,
    iStationType          INTEGER       DEFAULT 224
                                        CONSTRAINT st_ch_iStationType     CHECK (iStationType BETWEEN 220 AND 233)
                                        CONSTRAINT st_nn_iStationType     NOT NULL,
    sAllocationType       VARCHAR(30)   NULL,
    iDeleteInventory      INTEGER       DEFAULT 1
                                        CONSTRAINT st_ch_iDeleteInventory CHECK (iDeleteInventory IN (1, 2))
                                        CONSTRAINT st_nn_iDeleteInventory NOT NULL,
    sDefaultRoute         VARCHAR(12)   NULL,
    sLinkRoute            VARCHAR(12)   NULL,
    sRejectRoute          VARCHAR(12)   NULL,
    sDeviceID             VARCHAR(9)    NULL,
    sStationScale         VARCHAR(4)    NULL,
    sLoadPrefix           VARCHAR(4)    NULL,
    sOrderPrefix          VARCHAR(4)    NULL,
    iArrivalRequired      INTEGER       DEFAULT 1
                                        CONSTRAINT st_ch_iArrivalRequired CHECK (iArrivalRequired IN (1, 2))
                                        CONSTRAINT st_nn_iArrivalRequired NOT NULL,
    iMaxAllowedEnroute    INTEGER       DEFAULT 0,
    iMaxAllowedStaged     INTEGER       DEFAULT 0,
    sPrinter              VARCHAR(40)   NULL,
    iAutoLoadMovementType INTEGER       DEFAULT 174
                                        CONSTRAINT st_ch_iAutoLoadMovementType CHECK (iAutoLoadMovementType BETWEEN 174 AND 181)
                                        CONSTRAINT st_nn_iAutoLoadMovementType NOT NULL,
    iAutoOrderType        INTEGER       DEFAULT 340
                                        CONSTRAINT st_ch_iAutoOrderType        CHECK (iAutoOrderType BETWEEN 340 AND 342)
                                        CONSTRAINT st_nn_iAutoOrderType        NOT NULL,
    iAllocationEnabled    INTEGER       DEFAULT 1
                                        CONSTRAINT st_ch_iAllocationEnabled    CHECK (iAllocationEnabled IN (1, 2))
                                        CONSTRAINT st_nn_iAllocationEnabled    NOT NULL,
    iStatus               INTEGER       DEFAULT 202  -- STORERETRIEVE
                                        CONSTRAINT st_ch_iStatus               CHECK (iStatus BETWEEN 200 AND 202)
                                        CONSTRAINT st_nn_iStatus               NOT NULL,
    iBidirectionalStatus  INTEGER       DEFAULT 404  -- RETRIEVE
                                        CONSTRAINT st_ch_iBidirectionalStatus  CHECK (iBidirectionalStatus BETWEEN 400 AND 407)
                                        CONSTRAINT st_nn_iBidirectionalStatus  NOT NULL,
    iCaptive              INTEGER       DEFAULT 179
                                        CONSTRAINT st_ch_iCaptive              CHECK (iCaptive BETWEEN 179 AND 181)
                                        CONSTRAINT st_nn_iCaptive              NOT NULL,
    iConfirmLot           INTEGER       DEFAULT 2
                                        CONSTRAINT st_ch_iConfirmLot           CHECK (iConfirmLot IN (1, 2))
                                        CONSTRAINT st_nn_iConfirmLot           NOT NULL,
    iConfirmLocation      INTEGER       DEFAULT 2
                                        CONSTRAINT st_ch_iConfirmLocation      CHECK (iConfirmLocation IN (1, 2))
                                        CONSTRAINT st_nn_iConfirmLocation      NOT NULL,
    iConfirmLoad          INTEGER       DEFAULT 2
                                        CONSTRAINT st_ch_iConfirmLoad          CHECK (iConfirmLoad IN (1, 2))
                                        CONSTRAINT st_nn_iConfirmLoad          NOT NULL,
    iConfirmItem          INTEGER       DEFAULT 2
                                        CONSTRAINT st_ch_iConfirmItem          CHECK (iConfirmItem IN (1, 2))
                                        CONSTRAINT st_nn_iConfirmItem          NOT NULL,
    iConfirmQty           INTEGER       DEFAULT 1
                                        CONSTRAINT st_ch_iConfirmQty           CHECK (iConfirmQty IN (1, 2))
                                        CONSTRAINT st_nn_iConfirmQty           NOT NULL,
    sContainerType        VARCHAR(15)   NULL,
    iPhysicalStatus       INTEGER       DEFAULT 234
                                        CONSTRAINT st_ch_iPhysicalStatus       CHECK (iPhysicalStatus IN (233, 234))
                                        CONSTRAINT st_nn_iPhysicalStatus       NOT NULL,
    iOrderStatus          INTEGER       DEFAULT 233
                                        CONSTRAINT st_ch_iOrderStatus          CHECK (iOrderStatus IN (230, 233))
                                        CONSTRAINT st_nn_iOrderStatus          NOT NULL,
    iPoReceiveAll         INTEGER       DEFAULT 2
                                        CONSTRAINT st_ch_iPoReceiveAll         CHECK (iPoReceiveAll IN (1, 2))
                                        CONSTRAINT st_nn_iPoReceiveAll         NOT NULL,
    iCCIAllowed           INTEGER       DEFAULT 2
                                        CONSTRAINT st_ch_iCCIAllowed           CHECK (iCCIAllowed IN (1, 2))
                                        CONSTRAINT st_nn_iCCIAllowed           NOT NULL,
    fWeight               NUMERIC(13,3) DEFAULT 0.0,
    iHeight               INTEGER       DEFAULT 1 NULL,
    iAmountFull           INTEGER       DEFAULT 238
                                        CONSTRAINT st_ch_iAmountFull           CHECK (iAmountFull BETWEEN 234 AND 238)
                                        CONSTRAINT st_nn_iAmountFull           NOT NULL,
    iPriorityCategory     INTEGER       DEFAULT 2
                                        CONSTRAINT st_ch_iPriorityCategory CHECK (iPriorityCategory IN (1, 2, 9)),
    iReInputFlag          INTEGER       DEFAULT 0
                                        CONSTRAINT st_ch_iReInputFlag CHECK (iReInputFlag IN (0, 1)),

    iRetrieveCommandDetail INTEGER      DEFAULT 1
                                        CONSTRAINT st_ch_iRetrieveCommandDetail CHECK (iRetrieveCommandDetail BETWEEN 0 AND 3),
    sItem                 VARCHAR(30)   NULL,
    sLot                  VARCHAR(30)   NULL,
    fOrderQuantity        NUMERIC(13,3) DEFAULT 0.0
                                        CONSTRAINT st_nn_fOrderQuantity        NOT NULL,
    iAllowRoundRobin      INTEGER       DEFAULT 2
                                        CONSTRAINT st_ch_iAllowRoundRobin      CHECK (iAllowRoundRobin IN (1, 2))
                                        CONSTRAINT st_nn_iAllowRoundRobin      NOT NULL,
-- sReplenishSources specifies the types of locations that this station can replenish
-- from.  The order of the listing indicates most preferred to least preferred.
-- The format for this column is a comma delimited sequence of location types.
    sReplenishSources   VARCHAR(12)     NULL,
    iSimulate           INTEGER         DEFAULT 36
                                        CONSTRAINT st_ch_iSimulate     CHECK (iSimulate IN (35,36))
                                        CONSTRAINT st_nn_iSimulate     NOT NULL,
    iSimInterval        INTEGER         DEFAULT 0
                                        CONSTRAINT st_nn_iSimInterval  NOT NULL,
    iCustomAction       INTEGER         DEFAULT 0
                                        CONSTRAINT st_nn_iCustomAction NOT NULL,
    sRecommendedZone    VARCHAR(3)      NULL,
    sReprStationName    VARCHAR(4)      NULL,

    dModifyTime         TIMESTAMP(6),
    sAddMethod          VARCHAR2(2000),
    sUpdateMethod       VARCHAR2(2000),

    CONSTRAINT st_pk PRIMARY KEY (sStationName, sWarehouse) USING INDEX
                     TABLESPACE WRxJIndex
) TABLESPACE WRxJData;

COMMENT ON COLUMN STATION.iAllocationEnabled IS
        'Ask allocator for order allocation as needed. 1 = yes, 2 = no';
COMMENT ON COLUMN STATION.iPoReceiveAll IS
        'Set to YES if full Expected Receipt should be received from Store Screen. If NO then allow Receive Item screen from Store Load Screen, or individually.';
COMMENT ON COLUMN STATION.sItem IS
        'For auto-ordering a load to a station or auto-storing an item.';
COMMENT ON COLUMN STATION.sLot IS
        'For auto-ordering a load to a station or auto-storing an item.';
COMMENT ON COLUMN STATION.sReplenishSources IS
        'see jwmsadd.sql -- the comment is long!';
COMMENT ON COLUMN STATION.iSimInterval IS
        'SimInterval specifies the interval to delay when simulated the performance of a station''s function.  It is measured in milliseconds.';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding SYSCONFIG                   +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE SYSCONFIG
(
    iID                   NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sGroup                VARCHAR(100)  CONSTRAINT sysc_nn_sGroup          NOT NULL,
    sParameterName        VARCHAR(100)  CONSTRAINT sysc_nn_sParameterName  NOT NULL,
    sParameterValue       VARCHAR(100)  CONSTRAINT sysc_nn_sParameterValue NOT NULL,
    sDescription          VARCHAR(40)   NULL,
    iScreenChangeAllowed  INTEGER DEFAULT 1
                                  CONSTRAINT sysc_ch_iScreenChangeAllowed CHECK (iScreenChangeAllowed IN (1, 2))
                                  CONSTRAINT sysc_nn_iScreenChangeAllowed NOT NULL,

    iEnabled              INTEGER DEFAULT 1
                                  CONSTRAINT sysc_ch_iEnabled CHECK (iEnabled IN (1, 2))
                                  CONSTRAINT sysc_nn_iEnabled NOT NULL,

    sScreenType           VARCHAR(50)   NULL,
    dModifyTime           TIMESTAMP(6),
    sAddMethod            VARCHAR2(2000),
    sUpdateMethod         VARCHAR2(2000),

    CONSTRAINT sysc_uk UNIQUE (sGroup, sParameterName)
               USING INDEX TABLESPACE WRxJIndex

) TABLESPACE WRxJData;

COMMENT ON COLUMN SYSCONFIG.sGroup IS 'Configuration category.';
COMMENT ON COLUMN SYSCONFIG.iScreenChangeAllowed IS
        'Indicates if this record can be modified from a screen (i.e. is it a DAC field only)';


PROMPT ++++++++++++++++++++++++++++++++
PROMPT +   Adding VEHICLEMOVE         +
PROMPT ++++++++++++++++++++++++++++++++

CREATE TABLE VEHICLEMOVE
(
    iID                NUMBER     GENERATED BY DEFAULT AS IDENTITY,
    sLoadID            VARCHAR(8) CONSTRAINT vm_nn_sLoadID  NOT NULL,
    iSequenceNumber    INTEGER    DEFAULT 0
                                  CONSTRAINT vm_nn_iSequenceNumber  NOT NULL,
    iAGVLoadStatus     INTEGER    DEFAULT 260
                                  CONSTRAINT vm_ch_iAGVLoadStatus CHECK (iAGVLoadStatus BETWEEN 260 AND 271)
                                  CONSTRAINT vm_nn_iAGVLoadStatus NOT NULL,
    dStatusChangeTime  TIMESTAMP(6) DEFAULT SYSTIMESTAMP,
    sVehicleID         VARCHAR(3),
    sRequestID         VARCHAR(10),
    sCurrStation       VARCHAR(4)    CONSTRAINT vm_nn_sCurrStation NOT NULL,
    sDestStation       VARCHAR(4),
    sDualLoadMoveSeq   VARCHAR(11)   DEFAULT 'DEFAULT', -- used for dual load moves.
    iNotifyHost        INTEGER       DEFAULT 1
                                    CONSTRAINT vm_ch_iNotifyHost CHECK (iNotifyHost IN (1, 2)),
    dModifyTime        TIMESTAMP(6),
    sAddMethod         VARCHAR2(2000),
    sUpdateMethod      VARCHAR2(2000),

    CONSTRAINT vm_pk PRIMARY KEY (iSequenceNumber) USING INDEX
                     TABLESPACE WRxJIndex,
    CONSTRAINT vm_uk UNIQUE (sLoadID) USING INDEX TABLESPACE WRxJIndex

) TABLESPACE WRxJData;


PROMPT +++++++++++++++++++++++++++++++++++++
PROMPT +      Adding VEHICLESYSTEMCMD      +
PROMPT +++++++++++++++++++++++++++++++++++++

CREATE TABLE VEHICLESYSTEMCMD
(
    iID               NUMBER     GENERATED BY DEFAULT AS IDENTITY,
    iSequenceNumber   INTEGER    DEFAULT 0
                                 CONSTRAINT vs_nn_iSequenceNumber  NOT NULL,
    dStatusChangeTime TIMESTAMP(6) DEFAULT SYSTIMESTAMP,
    sSystemMessageID  VARCHAR(3) CONSTRAINT vs_nn_sSystemMessageID NOT NULL,
    iCommandStatus    INTEGER    DEFAULT 140
                                 CONSTRAINT vs_ch_iCommandStatus CHECK (iCommandStatus BETWEEN 140 AND 144)
                                 CONSTRAINT vs_nn_iCommandStatus NOT NULL,
    sCommandValue     VARCHAR(20),

    dModifyTime        TIMESTAMP(6),
    sAddMethod         VARCHAR2(2000),
    sUpdateMethod      VARCHAR2(2000),

    CONSTRAINT vs_pk PRIMARY KEY (iSequenceNumber) USING INDEX
                      TABLESPACE WRxJIndex

) TABLESPACE WRxJData;


PROMPT +++++++++++++++++++++++++++++++++++++
PROMPT +      Adding VEHICLEPATHS          +
PROMPT +++++++++++++++++++++++++++++++++++++

CREATE TABLE VEHICLEPATHS
(
    iID               NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sPathNumber       VARCHAR(7)  DEFAULT '1.0'
                                  CONSTRAINT vp_nn_fPathNumber  NOT NULL,
    sFromStation      VARCHAR(4)  CONSTRAINT vp_nn_sFromStation  NOT NULL,
    sToStation        VARCHAR(4)  CONSTRAINT vp_nn_sToStation    NOT NULL,
    dModifyTime       TIMESTAMP(6),
    sAddMethod        VARCHAR2(2000),
    sUpdateMethod     VARCHAR2(2000),

    CONSTRAINT vp_pk PRIMARY KEY (sPathNumber, sFromStation, sToStation)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding WAREHOUSE                   +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE WAREHOUSE
(
    iID                NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sSuperWarehouse    VARCHAR(3)  NULL,
    sWarehouse         VARCHAR(3)  CONSTRAINT wt_nn_sWarehouse       NOT NULL,
    sDescription       VARCHAR(40) NULL,
    iWarehouseType     INTEGER     DEFAULT 64
                                   CONSTRAINT wt_ch_iWarehouseType   CHECK (iWarehouseType IN (63, 64))
                                   CONSTRAINT wt_nn_iWarehouseType   NOT NULL,
    iWarehouseStatus   INTEGER     DEFAULT 240
                                   CONSTRAINT wt_ch_iWarehouseStatus CHECK (iWarehouseStatus IN (240, 241))
                                   CONSTRAINT wt_nn_iWarehouseStatus NOT NULL,
    iOneLoadPerLoc     INTEGER     DEFAULT 2
                                   CONSTRAINT wt_ch_iOneLoadPerLoc   CHECK (iOneLoadPerLoc IN (1, 2))
                                   CONSTRAINT wt_nn_iOneLoadPerLoc   NOT NULL,
    sEquipWarehouse    VARCHAR2(1) DEFAULT '0'
                                   CONSTRAINT wt_nn_sEquipWarehouse  NOT NULL,
    dModifyTime        TIMESTAMP(6),
    sAddMethod         VARCHAR2(2000),
    sUpdateMethod      VARCHAR2(2000),

    CONSTRAINT wt_uk UNIQUE (sSuperWarehouse, sWarehouse)
                     USING INDEX TABLESPACE WRxJIndex

) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding WRXSEQUENCER                +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE WRXSEQUENCER
(
    iID                 NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sSequenceIdentifier VARCHAR(15) CONSTRAINT sq_nn_sSequenceIdentifier NOT NULL,
    sEndDeviceName      VARCHAR(25) CONSTRAINT sq_nn_sEndDeviceName      NOT NULL,
    iSequenceType       INTEGER     DEFAULT 370
                                    CONSTRAINT sq_ch_iSequenceType    CHECK (iSequenceType BETWEEN 370 AND 372),
    iSequenceNumber     INTEGER     DEFAULT 0
                                    CONSTRAINT sq_nn_iSequenceNumber  NOT NULL,
    iIncrementFactor    INTEGER     DEFAULT 1
                                    CONSTRAINT sq_nn_iIncrementFactor NOT NULL,
    iStartValue         INTEGER     DEFAULT 0
                                    CONSTRAINT sq_nn_iStartValue      NOT NULL,
    iRestartValue       INTEGER     NULL,

    dModifyTime         TIMESTAMP(6),
    sAddMethod          VARCHAR2(2000),
    sUpdateMethod       VARCHAR2(2000),

    CONSTRAINT sq_pk PRIMARY KEY (sSequenceIdentifier, sEndDeviceName, iSequenceType)
                     USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;

COMMENT ON TABLE WRXSEQUENCER IS
        'Sequencing table for use with the generic WrxSequencer class.';
COMMENT ON COLUMN WRXSEQUENCER.sSequenceIdentifier IS
        'The unique sequence Identifier.';
COMMENT ON COLUMN WRXSEQUENCER.sEndDeviceName IS
        'End device we are sequencing for.';
COMMENT ON COLUMN WRXSEQUENCER.iIncrementFactor IS
        'A negative value means decrement sequence.';
COMMENT ON COLUMN WRXSEQUENCER.iRestartValue IS
        'MIN. OR MAX. point TO restart SEQUENCE -- Null means grow to max/min. integer size.';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding WRXTOHOST                   +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE WRXTOHOST
(
    iID                 NUMBER       GENERATED BY DEFAULT AS IDENTITY,
    sHostName           VARCHAR(25)  CONSTRAINT ho_nn_sHostName NOT NULL,
    dMessageAddTime     TIMESTAMP(6) DEFAULT SYSTIMESTAMP,
    iMessageSequence    INTEGER      CONSTRAINT ho_nn_iMessageSequence NOT NULL,
    sMessageIdentifier  VARCHAR(50)  NULL,
    sMessage            CLOB         DEFAULT EMPTY_CLOB(),
    iMessageProcessed   INTEGER      DEFAULT 2
                                     CONSTRAINT ho_ch_iMessageProcessed CHECK (iMessageProcessed IN (1, 2, 3)),
    dModifyTime         TIMESTAMP(6),
    sAddMethod          VARCHAR2(2000),
    sUpdateMethod       VARCHAR2(2000),

    CONSTRAINT ho_pk PRIMARY KEY (iMessageSequence, sHostName)
                     USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT ho_uk UNIQUE (iMessageProcessed, iMessageSequence, sHostName)
                     USING INDEX TABLESPACE WRxJIndex

) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding ZONE                        +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE ZONE
(
    iID             NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sZone           VARCHAR(3)    CONSTRAINT zt_nn_sZone NOT NULL,
    sDescription    VARCHAR(40)   NULL,

    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT zt_pk PRIMARY KEY (sZone) USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding ZONEGROUP                   +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE ZONEGROUP
(
    iID             NUMBER       GENERATED BY DEFAULT AS IDENTITY,
    sZoneGroup      VARCHAR(3)   CONSTRAINT zg_nn_sZoneGroup NOT NULL,
    iPriority       INTEGER      DEFAULT 0
                                 CONSTRAINT zg_nn_iPriority  NOT NULL,
    sZone           VARCHAR(3)   CONSTRAINT zg_nn_sZone      NOT NULL,

    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT zg_pk PRIMARY KEY (sZoneGroup, iPriority) USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding EQUIPMENTMONITORSTATUS      +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE EQUIPMENTMONITORSTATUS
(
    iID              NUMBER       GENERATED BY DEFAULT AS IDENTITY,
    sEMGraphicID     VARCHAR(30)  NOT NULL,
    sEMAltGraphicID  VARCHAR(30)  NOT NULL,
    sEMDescription   VARCHAR(50)  NULL,
    sEMBehavior      VARCHAR(30)  NULL,
    sEMStatusID      VARCHAR(12)  NULL,
    sEMStatusText1   VARCHAR(20)  NULL,
    sEMStatusText2   VARCHAR(20)  NULL,
    sEMErrorCode     VARCHAR(10)  NULL,
    sEMErrorText     VARCHAR(100) NULL,
    sEMErrorSet      VARCHAR(10)  NULL,
    sEMMCController  VARCHAR(30)  NULL,
    sEMMCID          VARCHAR(50)  NULL,
    sEMMOSController VARCHAR(30)  NULL,
    sEMMOSID         VARCHAR(50)  NULL,
    sEMDeviceID      VARCHAR(10)  NULL,
    sEMStationID     VARCHAR(10)  NULL,
    iEMCanTrack      INTEGER      DEFAULT 1
                                  CONSTRAINT EMS_CH_iEMCanTrack CHECK  ((iEMCanTrack=(2) OR iEMCanTrack=(1)))
                                  NOT NULL,
    dModifyTime      TIMESTAMP(6) NULL,
    sAddMethod       VARCHAR(2000) NULL,
    sUpdateMethod    VARCHAR(2000) NULL,

    CONSTRAINT PK_EQUIPMENTMONITORSTATUS PRIMARY KEY (sEMGraphicID) USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding EQUIPMENTMONITORSTATUSTYPE  +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE EQUIPMENTMONITORSTATUSTYPE
(
    iID                  NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sEMStatusID          VARCHAR(12)   NOT NULL,
    sEMStatusDescription VARCHAR(50)   NULL,
    iEMDisplayPriority   INTEGER       NOT NULL,
    sEMBackground        VARCHAR(7)    NULL,
    sEMForeground        VARCHAR(7)    NULL,
    dModifyTime          TIMESTAMP(6)  NULL,
    sAddMethod           VARCHAR(2000) NULL,
    sUpdateMethod        VARCHAR(2000) NULL,

    CONSTRAINT PK_EQUIPMENTMONITORSTATUSTYPE PRIMARY KEY (sEMStatusID) USING INDEX TABLESPACE WRxJIndex
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding EQUIPMENTMONITORTAB         +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE EQUIPMENTMONITORTAB
(
    iID            NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sEMGraphicTab  VARCHAR(30)   NOT NULL,
    sEMGraphicID   VARCHAR(30)   NOT NULL,
    dModifyTime    TIMESTAMP(6)  NULL,
    sAddMethod     VARCHAR(2000) NULL,
    sUpdateMethod  VARCHAR(2000) NULL
) TABLESPACE WRxJData;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding EQUIPMENTMONITORTRACKING    +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE EQUIPMENTMONITORTRACKING
(
    iID            NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sEMGraphicID   VARCHAR(30)   NOT NULL,
    sEMDeviceID    VARCHAR(10)   NULL,
    sEMTrackingID  VARCHAR(20)   NULL,
    sEMBarcode     VARCHAR(100)  NULL,
    sEMStatus      VARCHAR(100)  NULL,
    sEMOrigin      VARCHAR(30)   NULL,
    sEMDestination VARCHAR(30)   NULL,
    sEMSize        VARCHAR(3)    NULL,
    dModifyTime    TIMESTAMP(6)  NULL,
    sAddMethod     VARCHAR(2000) NULL,
    sUpdateMethod  VARCHAR(2000) NULL
) TABLESPACE WRxJData;


REM ---------------------------------------------------------------------------
REM ---------------------------------------------------------------------------
REM ------------ TABLES WITH FOREIGN KEY DEPENDENCIES GO HERE -----------------
REM ---------------------------------------------------------------------------
REM ---------------------------------------------------------------------------

PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding EMPLOYEE                    +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE EMPLOYEE
(
    iID                  NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sUserID              VARCHAR(13) CONSTRAINT em_nn_sUserID NOT NULL,
    sUserName            VARCHAR(30) NULL,
    sRole                VARCHAR(20) CONSTRAINT em_nn_sRole   NOT NULL,
    sPassword            VARCHAR(30) NULL,
    dPasswordExpiration  TIMESTAMP   NULL,
    sReleaseToCode       VARCHAR(3)  NULL,
    sLanguage            VARCHAR(20) NULL,
    iRememberLastLogin   INTEGER     DEFAULT 2
                                     CONSTRAINT em_ch_iRememberLastLogin CHECK (iRememberLastLogin IN (1, 2))
                                     CONSTRAINT em_nn_iRememberLastLogin NOT NULL,

    dModifyTime          TIMESTAMP(6),
    sAddMethod           VARCHAR2(2000),
    sUpdateMethod        VARCHAR2(2000),

    CONSTRAINT em_pk    PRIMARY KEY (sUserID) USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT em_fk_rl FOREIGN KEY (sRole) REFERENCES ROLE(sRole)
) TABLESPACE WRxJData;

CREATE INDEX em_ky ON EMPLOYEE (sRole) TABLESPACE WRXJIndex;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding LOCATION                    +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE LOCATION
(
    iID               NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sWarehouse        VARCHAR(3)  CONSTRAINT lc_nn_sWarehouse      NOT NULL,
    sAddress          VARCHAR(9)  CONSTRAINT lc_nn_sAddress        NOT NULL,
-- Shelf Position is known as the "address" in the MC-AGC Comm. Spec. For
-- baseline default this to zero (this was hard-coded in the message before).
-- For an actual impl. of this field in a project, it should be moved into a
-- separate table.
    sShelfPosition    VARCHAR(3)  DEFAULT '000',
    sZone             VARCHAR(3)  NULL,
    iLocationStatus   INTEGER     DEFAULT 29
                                  CONSTRAINT lc_ch_iLocationStatus CHECK (iLocationStatus BETWEEN 29 AND 32)
                                  CONSTRAINT lc_nn_iLocationStatus NOT NULL,
    iLocationType     INTEGER     DEFAULT 10
                                  CONSTRAINT lc_ch_iLocationType   CHECK (iLocationType BETWEEN 10 AND 19)
                                  CONSTRAINT lc_nn_iLocationType   NOT NULL,
    iEmptyFlag        INTEGER     DEFAULT 21
                                  CONSTRAINT lc_ch_iEmptyFlag      CHECK (iEmptyFlag BETWEEN 21 AND 25)
                                  CONSTRAINT lc_nn_iEmptyFlag      NOT NULL,
    sDeviceID         VARCHAR(9)  NULL,
    iHeight           INTEGER     DEFAULT 1,
    iAssignedLength   INTEGER     DEFAULT 0,
    iSearchOrder      INTEGER     DEFAULT 1,
    iAisleGroup       INTEGER     DEFAULT 0,
    iAllowDeletion    INTEGER     DEFAULT 1
                                  CONSTRAINT lc_ch_iAllowDeletion  CHECK (iAllowDeletion IN (1, 2))
                                  CONSTRAINT lc_nn_iAllowDeletion  NOT NULL,
    iMoveSequence     INTEGER     DEFAULT 0, -- Used by MoveView
    iLocationDepth    INTEGER     DEFAULT 1
                                  CONSTRAINT lc_ch_iLocationDepth  CHECK (iLocationDepth BETWEEN 1 AND 3)
                                  CONSTRAINT lc_nn_iLocationDepth  NOT NULL,
    sLinkedAddress    VARCHAR(9)  NULL,
    iSwapZone         INTEGER     DEFAULT 0,

    dModifyTime       TIMESTAMP(6),
    sAddMethod        VARCHAR2(2000),
    sUpdateMethod     VARCHAR2(2000),

    CONSTRAINT lc_pk PRIMARY KEY (sWarehouse, sAddress)
                     USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT lc_fk_dv FOREIGN KEY (sDeviceID) REFERENCES DEVICE(sDeviceID)
) TABLESPACE WRxJData;

CREATE INDEX lc_ky ON LOCATION (sDeviceID) TABLESPACE WRXJIndex;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding DEDICATEDLOCATION           +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE DEDICATEDLOCATION
(
    iID              NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sItem            VARCHAR(30)   CONSTRAINT dl_nn_sItem            NOT NULL,
    sWarehouse       VARCHAR(3)    CONSTRAINT dl_nn_sWarehouse       NOT NULL,
    sAddress         VARCHAR(9)    CONSTRAINT dl_nn_sAddress         NOT NULL,
    fMinimumQuantity NUMERIC(13,3) DEFAULT 0
                                   CONSTRAINT dl_nn_fMinimumQuantity NOT NULL,
    fMaximumQuantity NUMERIC(13,3) DEFAULT 1
                                   CONSTRAINT dl_nn_fMaximumQuantity NOT NULL,
    iDedicatedType   INTEGER       DEFAULT 88
                                   CONSTRAINT dl_ch_iDedicatedType   CHECK (iDedicatedType BETWEEN 88 AND 90)
                                   CONSTRAINT dl_nn_iDedicatedType   NOT NULL,
    iReplenishType   INTEGER       DEFAULT 87
                                   CONSTRAINT dl_ch_iReplenishType   CHECK (iReplenishType IN (85, 86, 87, 90))
                                   CONSTRAINT dl_nn_iReplenishType   NOT NULL,
    iReplenishNow    INTEGER       DEFAULT 11
                                   CONSTRAINT dl_ch_iReplenishNow    CHECK (iReplenishNow BETWEEN 11 AND 14)
                                   CONSTRAINT dl_nn_iReplenishNow    NOT NULL,
    dModifyTime      TIMESTAMP(6),
    sAddMethod       VARCHAR2(2000),
    sUpdateMethod    VARCHAR2(2000),

    CONSTRAINT dl_pk PRIMARY KEY (sItem, sWarehouse, sAddress)
                     USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT dl_fk_lc FOREIGN KEY (sWarehouse, sAddress)
               REFERENCES LOCATION(sWarehouse, sAddress),
    CONSTRAINT dl_fk_im FOREIGN KEY (sItem) REFERENCES ITEMMASTER(sItem)

) TABLESPACE WRxJData;

CREATE INDEX dl_ky1 ON DEDICATEDLOCATION (sWarehouse, sAddress) TABLESPACE WRXJIndex;
CREATE INDEX dl_ky2 ON DEDICATEDLOCATION (sItem) TABLESPACE WRXJIndex;

COMMENT ON COLUMN DEDICATEDLOCATION.iDedicatedType IS
        'Determines how item will be picked from this location.';
COMMENT ON COLUMN DEDICATEDLOCATION.iReplenishType IS
        'Determines how allocator will allocate this item.';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding LOAD                        +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE LOAD
(
    iID                 NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sParentLoad         VARCHAR(8)    CONSTRAINT ld_nn_sParentLoad        NOT NULL,
    sLoadID             VARCHAR(8)    CONSTRAINT ld_nn_sLoadID            NOT NULL,
    sWarehouse          VARCHAR(3)    CONSTRAINT ld_nn_sWarehouse         NOT NULL,
    sAddress            VARCHAR(9)    CONSTRAINT ld_nn_sAddress           NOT NULL,
    sShelfPosition      VARCHAR(3)    DEFAULT '000',
    sRouteID            VARCHAR(12)   NULL,
    sContainerType      VARCHAR(15)   CONSTRAINT ld_nn_sContainerType     NOT NULL,
    iLoadMoveStatus     INTEGER       DEFAULT 224
                                      CONSTRAINT ld_ch_iLoadMoveStatus    CHECK (iLoadMoveStatus BETWEEN 219 AND 246)
                                      CONSTRAINT ld_nn_iLoadMoveStatus    NOT NULL,
    dMoveDate           TIMESTAMP     DEFAULT SYSTIMESTAMP,
    sLoadMessage        VARCHAR(40)   NULL,
    iLoadPresenceCheck  INTEGER       DEFAULT 1
                                      CONSTRAINT ld_ch_iLoadPresenceCheck CHECK (iLoadPresenceCheck IN (1, 2))
                                      CONSTRAINT ld_nn_iLoadPresenceCheck NOT NULL,
    iHeight             INTEGER       DEFAULT 1,
    iLength             INTEGER       DEFAULT 1,
    iWidth              INTEGER       DEFAULT 1,
    sRecommendedZone    VARCHAR(3)    NULL,
    sDeviceID           VARCHAR(9)    NULL,
    sNextWarehouse      VARCHAR(3)    NULL,
    sNextAddress        VARCHAR(9)    NULL,
    sNextShelfPosition  VARCHAR(3)    DEFAULT '000',
    sFinalWarehouse     VARCHAR(3)    NULL,
    sFinalAddress       VARCHAR(9)    NULL,
    iAmountFull         INTEGER       DEFAULT 234
                                      CONSTRAINT ld_ch_iAmountFull CHECK (iAmountFull BETWEEN 234 AND 238)
                                      CONSTRAINT ld_nn_iAmountFull NOT NULL,
    sMCKey              VARCHAR(8)    NULL,
    sBCRData            VARCHAR(30)   NULL,
    fWeight             NUMERIC(13,3) DEFAULT 0.0,
    iGroupNo            INTEGER     DEFAULT 0,
    dModifyTime         TIMESTAMP(6),
    sAddMethod          VARCHAR2(2000),
    sUpdateMethod       VARCHAR2(2000),

    CONSTRAINT ld_uk1   UNIQUE (sParentLoad, sLoadID)
                        USING INDEX TABLESPACE WRxJIndex,

    CONSTRAINT ld_uk2   UNIQUE (sLoadID) USING INDEX TABLESPACE WRxJIndex,

    CONSTRAINT ld_uk3   UNIQUE (sMCKey) USING INDEX TABLESPACE WRxJIndex,

    CONSTRAINT ld_fk_lc FOREIGN KEY (sWarehouse, sAddress)
                        REFERENCES LOCATION(sWarehouse, sAddress)
) TABLESPACE WRxJData;

CREATE INDEX ld_ky ON LOAD (sWarehouse, sAddress) TABLESPACE WRXJIndex;

COMMENT ON COLUMN LOAD.sParentLoad IS
    'Only filled if parent load (future--currently required).';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding LOADLINEITEM                +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE LOADLINEITEM
(
    iID                 NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sItem               VARCHAR(30)   CONSTRAINT ll_nn_sItem               NOT NULL,
    sLot                VARCHAR(30)   NULL,
    sLoadID             VARCHAR(8)    CONSTRAINT ll_nn_sLoadID             NOT NULL,
    sLineID             VARCHAR(12)   NULL,
    sPositionID         VARCHAR(3)    NULL,
    dLastCCIDate        TIMESTAMP     DEFAULT SYSTIMESTAMP
                                      CONSTRAINT ll_nn_dLastCCIDate        NOT NULL,
    dAgingDate          TIMESTAMP     DEFAULT SYSTIMESTAMP
                                      CONSTRAINT ll_nn_dAgingDate          NOT NULL,
    dExpirationDate     TIMESTAMP     DEFAULT SYSTIMESTAMP
                                      CONSTRAINT ll_nn_dExpirationDate     NOT NULL,
    fCurrentQuantity    NUMERIC(13,3) DEFAULT 0.0
                                      CONSTRAINT ll_nn_fCurrentQuantity    NOT NULL,
    fAllocatedQuantity  NUMERIC(13,3) DEFAULT 0.0
                                      CONSTRAINT ll_nn_fAllocatedQuantity  NOT NULL,
    sOrderID            VARCHAR(30)   NULL,
    sOrderLot           VARCHAR(30)   NULL,
    iHoldType           INTEGER       DEFAULT 168
                                      CONSTRAINT ll_ch_iHoldType           CHECK (iHoldType BETWEEN 168 AND 172)
                                      CONSTRAINT ll_nn_iHoldType           NOT NULL,
    iPriorityAllocation INTEGER       DEFAULT 2
                                      CONSTRAINT ll_ch_iPriorityAllocation CHECK (iPriorityAllocation IN (1, 2))
                                      CONSTRAINT ll_nn_iPriorityAllocation NOT NULL,
    sHoldReason         VARCHAR(3)    NULL,
    sExpectedReceipt    VARCHAR(30)   NULL,

    dModifyTime         TIMESTAMP(6),
    sAddMethod          VARCHAR2(2000),
    sUpdateMethod       VARCHAR2(2000),

    CONSTRAINT ll_uk UNIQUE (sLoadID, sItem, sLot, sLineID, sPositionID, sOrderID, sOrderLot)
               USING INDEX TABLESPACE WRxJIndex,

    CONSTRAINT ll_fk_ld FOREIGN KEY (sLoadID) REFERENCES LOAD(sLoadID),
    CONSTRAINT ll_fk_im FOREIGN KEY (sItem)   REFERENCES ITEMMASTER(sItem)
) TABLESPACE WRxJData;

CREATE INDEX ll_ky1 ON LOADLINEITEM (sLoadID) TABLESPACE WRXJIndex;
CREATE INDEX ll_ky2 ON LOADLINEITEM (sItem) TABLESPACE WRXJIndex;

COMMENT ON COLUMN LOADLINEITEM.sOrderID  IS 'Filled in on to-load Item Detail.';
COMMENT ON COLUMN LOADLINEITEM.sOrderLot IS 'Lot that was on order line.';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding LOGIN                       +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE LOGIN
(
    iID             NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sUserID         VARCHAR(13) CONSTRAINT li_nn_sUserID      NOT NULL,
    sRole           VARCHAR(20) NULL,
    dLoginTime      TIMESTAMP   DEFAULT SYSTIMESTAMP,
    sMachineName    VARCHAR(30) CONSTRAINT li_nn_sMachineName NOT NULL,
    sIPAddress      VARCHAR(15) NULL,

    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT li_pk    PRIMARY KEY (sUserID, sMachineName)
                        USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT li_fk_em FOREIGN KEY (sUserID) REFERENCES EMPLOYEE(sUserID)
) TABLESPACE WRxJData;

CREATE INDEX li_ky ON LOGIN (sUserID) TABLESPACE WRXJIndex;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding ORDERHEADER                 +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE ORDERHEADER
(
    iID                  NUMBER       GENERATED BY DEFAULT AS IDENTITY,
    sOrderID             VARCHAR(30)  CONSTRAINT oh_nn_sOrderID             NOT NULL,
    dOrderedTime         TIMESTAMP    DEFAULT SYSTIMESTAMP
                                      CONSTRAINT oh_nn_dOrderedTime         NOT NULL,
    dScheduledDate       TIMESTAMP    DEFAULT SYSTIMESTAMP
                                      CONSTRAINT oh_nn_dScheduledDate       NOT NULL,
    dShortOrderCheckTime TIMESTAMP    DEFAULT SYSTIMESTAMP
                                      CONSTRAINT oh_nn_dShortOrderCheckTime NOT NULL,
    iPriority            INTEGER      DEFAULT 5
                                      CONSTRAINT oh_nn_iPriority    NOT NULL,
    iOrderType           INTEGER      DEFAULT 1
                                      CONSTRAINT oh_ch_iOrderType   CHECK (iOrderType IN (1, 2, 4, 8, 16))
                                      CONSTRAINT oh_nn_iOrderType   NOT NULL,
    sDestinationStation  VARCHAR(4)   NULL,
    sDescription         VARCHAR(40)  NULL,
    iOrderStatus         INTEGER      DEFAULT 229
                                      CONSTRAINT oh_ch_iOrderStatus CHECK (iOrderStatus BETWEEN 229 AND 243)
                                      CONSTRAINT oh_nn_iOrderStatus NOT NULL,
    iNextStatus          INTEGER      DEFAULT 230
                                      CONSTRAINT oh_ch_iNextStatus  CHECK (iNextStatus BETWEEN 229 AND 243)
                                      CONSTRAINT oh_nn_iNextStatus  NOT NULL,
    sOrderMessage        VARCHAR(256) NULL,
    sReleaseToCode       VARCHAR(3)   NULL,
    sCarrierID           VARCHAR(6)   NULL,
    sDestWarehouse       VARCHAR(3)   NULL,
    sDestAddress         VARCHAR(9)   NULL,
    sShipCustomer        VARCHAR(15)  NULL,
    iHostLineCount       INTEGER      DEFAULT 1
                                      CONSTRAINT oh_nn_iHostLineCount NOT NULL,

    dModifyTime          TIMESTAMP(6),
    sAddMethod           VARCHAR2(2000),
    sUpdateMethod        VARCHAR2(2000),

    CONSTRAINT oh_pk    PRIMARY KEY (sOrderID)
                        USING INDEX TABLESPACE WRxJIndex,

    CONSTRAINT oh_fk_ci FOREIGN KEY (sShipCustomer) REFERENCES CUSTOMER(sCustomer)

) TABLESPACE WRxJData;

CREATE INDEX oh_ky ON ORDERHEADER (sShipCustomer) TABLESPACE WRXJIndex;

COMMENT ON TABLE ORDERHEADER IS 'Order Header Table';
COMMENT ON COLUMN ORDERHEADER.sShipCustomer IS 'Not Used  - Do we want to change this customer?';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding ORDERLINE                   +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE ORDERLINE
(
    iID                NUMBER        GENERATED BY DEFAULT AS IDENTITY,
    sOrderID           VARCHAR(30)   CONSTRAINT ol_nn_sOrderID           NOT NULL,
    sItem              VARCHAR(30)   NULL,
    sOrderLot          VARCHAR(30)   NULL,
    sLineID            VARCHAR(12)   NULL,
    sRouteID           VARCHAR(12)   NULL,
    fOrderQuantity     NUMERIC(13,3) DEFAULT 0.0
                                     CONSTRAINT ol_nn_fOrderQuantity     NOT NULL,
    fAllocatedQuantity NUMERIC(13,3) DEFAULT 0.0
                                     CONSTRAINT ol_nn_fAllocatedQuantity NOT NULL,
    fPickQuantity      NUMERIC(13,3) DEFAULT 0.0
                                     CONSTRAINT ol_nn_fPickQuantity      NOT NULL,
    fShipQuantity      NUMERIC(13,3) DEFAULT 0.0
                                     CONSTRAINT ol_nn_fShipQuantity      NOT NULL,
    sLoadID            VARCHAR(8)    NULL,
    sDescription       VARCHAR(40)   NULL,
    sContainerType     VARCHAR(15)   NULL,
    sWarehouse         VARCHAR(3)    NULL,  -- Maintenance by warehouse.
    sBeginWarehouse    VARCHAR(3)    NULL,  -- Maintenance by Location range.
    sBeginAddress      VARCHAR(9)    NULL,  --  ...
    sEndingWarehouse   VARCHAR(3)    NULL,  --  ...
    sEndingAddress     VARCHAR(9)    NULL,  --  ...
    iHeight            INTEGER       DEFAULT 1,
    iLineShy           INTEGER       DEFAULT 2
                                     CONSTRAINT ol_ch_iLineShy CHECK (iLineShy IN (1, 2))
                                     CONSTRAINT ol_nn_iLineShy NOT NULL,
    dModifyTime        TIMESTAMP(6),
    sAddMethod         VARCHAR2(2000),
    sUpdateMethod      VARCHAR2(2000),

    CONSTRAINT ol_uk    UNIQUE (sItem, sOrderLot, sLineID, sOrderID, sLoadID)
                        USING INDEX TABLESPACE WRxJIndex,

    CONSTRAINT ol_fk_oh FOREIGN KEY (sOrderID) REFERENCES ORDERHEADER(sOrderID),
    CONSTRAINT ol_fk_im FOREIGN KEY (sItem) REFERENCES ITEMMASTER(sItem)

) TABLESPACE WRxJData;

CREATE INDEX ol_ky1 ON ORDERLINE (sOrderID) TABLESPACE WRXJIndex;
CREATE INDEX ol_ky2 ON ORDERLINE (sItem) TABLESPACE WRXJIndex;

COMMENT ON TABLE ORDERLINE IS 'Order Line Table';
COMMENT ON COLUMN ORDERLINE.sWarehouse       IS 'Used for Repl and Cyc Count';
COMMENT ON COLUMN ORDERLINE.sBeginWarehouse  IS 'Used for Repl and Cyc Count';
COMMENT ON COLUMN ORDERLINE.sBeginAddress    IS 'Used for Repl and Cyc Count';
COMMENT ON COLUMN ORDERLINE.sEndingWarehouse IS 'Used for Repl and Cyc Count';
COMMENT ON COLUMN ORDERLINE.sEndingAddress   IS 'Used for Repl and Cyc Count';
COMMENT ON COLUMN ORDERLINE.iHeight          IS 'Used to get container for like items';
COMMENT ON COLUMN ORDERLINE.sLoadID          IS 'for ordering by load (automated)';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding PURCHASEORDERLINE           +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE PURCHASEORDERLINE
(
    iID                NUMBER         GENERATED BY DEFAULT AS IDENTITY,
    sOrderID           VARCHAR(30)    CONSTRAINT el_nn_sOrderID          NOT NULL,
    sItem              VARCHAR(30)    NULL,
    sLot               VARCHAR(30)    NULL,
    sLineID            VARCHAR(12)    NULL,
    fExpectedQuantity  NUMERIC(13,3)  DEFAULT 1
                                      CONSTRAINT el_nn_fExpectedQuantity NOT NULL,
    fReceivedQuantity  NUMERIC(13,3)  DEFAULT 0
                                      CONSTRAINT el_nn_fReceivedQuantity NOT NULL,
    fCaseQuantity      NUMERIC(13,3)  DEFAULT 0.0
                                      CONSTRAINT el_nn_fCaseQuantity     NOT NULL,
    iInspection        INTEGER        DEFAULT 2
                                      CONSTRAINT el_ch_iInspection       CHECK (iInspection IN (1, 2))
                                      CONSTRAINT el_nn_iInspection       NOT NULL,
    dExpirationDate    TIMESTAMP      DEFAULT SYSTIMESTAMP
                                      CONSTRAINT el_nn_dExpirationDate   NOT NULL,
    sHoldReason        VARCHAR(3)     NULL,
    sRouteID           VARCHAR(12)    NULL,
    sLoadID            VARCHAR(8)     NULL,

    dModifyTime        TIMESTAMP(6),
    sAddMethod         VARCHAR2(2000),
    sUpdateMethod      VARCHAR2(2000),

    CONSTRAINT el_uk    UNIQUE (sItem, sLot, sLineID, sOrderID)
                        USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT el_fk_eh FOREIGN KEY (sOrderID)
                        REFERENCES PURCHASEORDERHEADER(sOrderID)
) TABLESPACE WRxJData;

CREATE INDEX el_ky ON PURCHASEORDERLINE (sOrderID) TABLESPACE WRXJIndex;


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding ROLEOPTION                  +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE ROLEOPTION
(
    iID             NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sRole           VARCHAR(20) CONSTRAINT ro_nn_sRole NOT NULL,
    sCategory       VARCHAR(15) CONSTRAINT ro_nn_sCategory NOT NULL,
    sOption         VARCHAR(20) CONSTRAINT ro_nn_sOption NOT NULL,
    sIconName       VARCHAR(25) NULL,
    sClassName      VARCHAR(110)CONSTRAINT ro_nn_sClassName NOT NULL,
    iButtonBar      INTEGER     DEFAULT 2
                                CONSTRAINT ro_ch_iButtonBar CHECK (iButtonBar IN (1, 2))
                                CONSTRAINT ro_nn_iButtonBar NOT NULL,
    iAddAllowed     INTEGER     DEFAULT 2
                                CONSTRAINT ro_ch_iAddAllowed CHECK (iAddAllowed IN (1, 2))
                                CONSTRAINT ro_nn_iAddAllowed NOT NULL,
    iModifyAllowed  INTEGER     DEFAULT 2
                                CONSTRAINT ro_ch_iModifyAllowed CHECK (iModifyAllowed IN (1, 2))
                                CONSTRAINT ro_nn_iModifyAllowed NOT NULL,
    iDeleteAllowed  INTEGER     DEFAULT 2
                                CONSTRAINT ro_ch_iDeleteAllowed CHECK (iDeleteAllowed IN (1, 2))
                                CONSTRAINT ro_nn_iDeleteAllowed NOT NULL,
    iViewAllowed    INTEGER     DEFAULT 1
                                CONSTRAINT ro_ch_iViewAllowed CHECK (iViewAllowed IN (1, 2))
                                CONSTRAINT ro_nn_iViewAllowed NOT NULL,
    dModifyTime     TIMESTAMP(6),
    sAddMethod      VARCHAR2(2000),
    sUpdateMethod   VARCHAR2(2000),

    CONSTRAINT ro_pk    PRIMARY KEY (sRole, sCategory, sOption)
                        USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT ro_fk_rl FOREIGN KEY (sRole) REFERENCES ROLE(sRole)
) TABLESPACE WRxJData;

CREATE INDEX ro_ky ON ROLEOPTION (sRole) TABLESPACE WRXJIndex;

COMMENT ON COLUMN ROLEOPTION.sCategory  IS 'Main Menu category: File,Edit,...';
COMMENT ON COLUMN ROLEOPTION.sOption    IS 'Sub-Menu options.';
COMMENT ON COLUMN ROLEOPTION.sIconName  IS 'Associated Icon Name.';
COMMENT ON COLUMN ROLEOPTION.sClassName IS 'Associated Java class name.';


PROMPT ++++++++++++++++++++++++++++++++++++++++
PROMPT +   Adding SYNONYMS                    +
PROMPT ++++++++++++++++++++++++++++++++++++++++

CREATE TABLE SYNONYMS
(
    iID                NUMBER      GENERATED BY DEFAULT AS IDENTITY,
    sItem              VARCHAR(30),
    sSynonym           VARCHAR(30),

    dModifyTime        TIMESTAMP(6),
    sAddMethod         VARCHAR2(2000),
    sUpdateMethod      VARCHAR2(2000),
    CONSTRAINT sy_pk   PRIMARY KEY (sSynonym)
                       USING INDEX TABLESPACE WRxJIndex,
    CONSTRAINT sy_fk_im FOREIGN KEY (sItem) REFERENCES ITEMMASTER(sItem)
) TABLESPACE WRxJData;


Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem **********  End of Table Creation ***************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************
Rem *************************************************************************


Rem ************************************************
Rem ************************************************
Rem *           Translation values.                *
Rem ************************************************
Rem ************************************************

Rem TRANBEGIN boldnt
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iActiveConfig
Rem    YES        , 1,    "Yes"
Rem    NO         , 2,    "No"
Rem TRANEND

Rem TRANBEGIN iAddAllowed
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iAGVLoadStatus
Rem    AGV_NOMOVE            ,  260,   "AGV Move Unsent"
Rem    AGV_MOVESENT          ,  261,   "AGV Move sent"  -- command sent awaiting ACK or NAK
Rem    AGV_MOVEPENDING       ,  262,   "AGV move pending"   --AGV enroute for pickup
Rem    AGV_MOVEERROR         ,  263,   "AGV move Error"     --AGV cmd. aborted.
Rem    AGV_MOVING            ,  264,   "AGV moving"         --AGV load moving.
Rem    AGV_MOVECOMPLETE      ,  265,   "AGV Move Completed"
Rem    AGV_MOVECANCELSENT    ,  266,   "AGV Move cancel sent" -- Cancel sent awaiting ACK or NAK
Rem    AGV_MOVECANCELED      ,  267,   "AGV Move Canceled"  -- Move was successfully canceled.
Rem    AGV_MOVECANCELREQUEST ,  268,   "AGV Move Cancel Request" -- Cancel request from user.
Rem    AGV_MOVECANCELERROR   ,  269,   "AGV Move Cancel Error" -- Cancel request rejected.
Rem    AGV_MOVECANCELPENDING ,  270,   "AGV Move Cancel Pending" -- Cancel request submitted successfully.
Rem    AGV_RECOVERABLE       ,  271,   "AGV Move recoverable."
Rem TRANEND

Rem TRANBEGIN iAllocationEnabled
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iAllowDeletion
Rem    YES   ,     1,    "Yes"
Rem    NO    ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iAllowRoundRobin
Rem    YES  ,     1,    "Yes (Use Device Token)"
Rem    NO   ,     2,    "No (Use Route)"
Rem TRANEND

Rem TRANBEGIN iAmountFull
Rem    EMPTY         ,   234,    "Empty"
Rem    ONEQUARTER    ,   235,    "1/4 Full"
Rem    HALF          ,   236,    "1/2 Full"
Rem    THREEQUARTER  ,   237,    "3/4 Full"
Rem    FULL          ,   238,    "Full"
Rem TRANEND

Rem TRANBEGIN iArrivalRequired
Rem    YES   ,     1,    "Yes"
Rem    NO    ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iAutoLoadMovementType
Rem    AUTO_MOVE_OFF             , 174,  "Auto-Load Movement Off"
Rem    BOTH                      , 175,  "Both Pick & Receiving"
Rem    AUTORECEIVE_ER            , 176,  "Auto-Receive With E.R."
Rem    AUTORECEIVE_ITEM          , 177,  "Auto-Receive With Item Only"
Rem    AUTORECEIVE_LOAD          , 178,  "Auto-Receive Load"
Rem    AUTOPICK                  , 179,  "Auto-Pick"
Rem    AUTORECEIVE_BCR           , 180,  "Auto-Receive BCR as Item"
Rem    AUTORECEIVE_EXPECTED_LOAD , 181,  "Auto-Receive Load with E.R. Validation"
Rem TRANEND

Rem TRANBEGIN iAutoOrderType
Rem    AUTO_ORDER_OFF        ,   340,   "Auto-Order off."
Rem    EMPTY_CONTAINER_ORDER ,   341,   "Auto-Order Empty Container."
Rem    ITEM_ORDER            ,   342,   "Auto-Order Item."
Rem TRANEND

Rem TRANBEGIN iBidirectionalStatus
Rem    STOREMODE              ,   400,    "Store Mode"
Rem    STOREMODE_REQUESTED    ,   401,    "Store Mode Requested"
Rem    STOREMODE_SENT         ,   402,    "Store Mode Sent"
Rem    STOREMODE_PENDING      ,   403,    "Store Mode Pending"
Rem    RETRIEVEMODE           ,   404,    "Retrieve Mode"
Rem    RETRIEVEMODE_REQUESTED ,   405,    "Retrieve Mode Requested"
Rem    RETRIEVEMODE_SENT      ,   406,    "Retrieve Mode Sent"
Rem    RETRIEVEMODE_PENDING   ,   407,    "Retrieve Mode Pending"
Rem TRANEND

Rem TRANBEGIN iBoldNote
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem    NOP  ,     3,    "NOP"              -- Means No Printing of not label.
Rem TRANEND

Rem TRANBEGIN iButtonBar
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iCaptive
Rem    NONCAPTIVE  ,   179,    "Not Captive"
Rem    SEMICAPTIVE ,   180,    "Semi Captive"
Rem    CAPTIVE     ,   181,    "Captive"
Rem TRANEND

Rem TRANBEGIN iCategory
Rem    TERMINALSTAT ,   101,    "Terminal"
Rem    EMPLOYEESTAT ,   102,    "Employee"
Rem TRANEND

Rem TRANBEGIN iCCIAllowed
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iCommandStatus
Rem    AGV_SYSCMD_REQUEST  , 140, "AGV System change Requested" -- Change request from user.
Rem    AGV_SYSCMD_SENT     , 141, "AGV System command Sent"   -- Change request submitted awaiting ACK
Rem    AGV_SYSCMD_PENDING  , 142, "AGV System command Pending" -- Awaiting command completion.
Rem    AGV_SYSCMD_COMPLETE , 143, "AGV System command Completed"
Rem    AGV_SYSCMD_ERROR    , 144, "AGV System command Error"  -- Change request rejected.
Rem TRANEND

Rem TRANBEGIN iCommunicationMode
Rem    MASTER    ,   182,    "Server"
Rem    SLAVE     ,   183,    "Client"
Rem TRANEND

Rem TRANBEGIN iConfirmItem
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iConfirmLoad
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iConfirmLocation
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iConfirmLot
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iConfirmQty
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iContainerUse
Rem    STORAGE  ,     231,    "Storage"
Rem    REPICK   ,     232,    "Repick"
Rem    CUSTOM   ,     233,    "Custom"
Rem    SHIPPING ,     234,    "Shipping"
Rem TRANEND

Rem TRANBEGIN iCustomAction
Rem    CA_NORMAL    ,    0,    "None"
Rem    CA_CUSTOM1    ,    1,    "Custom Action 1"  -- Add/Modify/Delete for project specific
Rem    CA_CUSTOM2    ,    2,    "Custom Action 2"  -- Add/Modify/Delete for project specific
Rem    CA_CUSTOM3    ,    3,    "Custom Action 3"  -- Add/Modify/Delete for project specific
Rem    CA_CUSTOM4    ,    4,    "Custom Action 4"  -- Add/Modify/Delete for project specific
Rem    CA_CUSTOM5    ,    5,    "Custom Action 5"  -- Add/Modify/Delete for project specific
Rem    CA_CUSTOM6    ,    6,    "Custom Action 6"  -- Add/Modify/Delete for project specific
Rem TRANEND

Rem TRANBEGIN iDedicatedType
Rem    PIECEPICK  ,    88,    "Piece"
Rem    FULLPICK   ,    89,    "Full Unit"
Rem    INNER_PACK ,    90,    "Inner Pack"
Rem TRANEND

Rem TRANBEGIN iDeleteAllowed
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iDeleteAtZeroQuantity
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iDeleteInventory
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iDeleteOnUse
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iDestType
Rem   EQUIPMENT ,   231,    "Equipment Route"
Rem   STATION   ,   232,    "Station Route"
Rem TRANEND

Rem TRANBEGIN iDeviceToken
Rem    TRUE       ,  235,    "TRUE"
Rem    FALSE      ,  236,    "FALSE"
Rem TRANEND

Rem TRANBEGIN iDeviceType
Rem    ARC100        ,   179,    "ARC100"
Rem    SRC9Y         ,   180,    "SRC9Y Machine"
Rem    SRMACHINE     ,   181,    "SR Machine"
Rem    PLC           ,   182,    "PLC Device"
Rem    SRC5          ,   183,    "SRC5 Machine"
Rem    CONV_DEVICE   ,   184,    "Conventional Device"
Rem    MOS_DEVICE    ,   185,    "MOS Device - do not use"
Rem    AGC           ,   186,    "AGC Device"
Rem    SRC9X         ,   187,    "SRC9X Machine"
Rem    AGC9X         ,   188,    "AGC9X Machine"
Rem    SCALE         ,   189,    "SCALE Device"
Rem    AGV           ,   190,    "AGV Device"
Rem    WCS4_CONTROL  ,   191,    "WCS4 Controller"
Rem    WCS4_VEHICLE  ,   192,    "WCS4 Shuttle"
Rem    WCS4_LIFTER   ,   193,    "WCS4 Lifter"
Rem TRANEND

Rem TRANBEGIN iDirection
Rem    INBOUND   ,    101,    "Inbound"
Rem    OUTBOUND  ,    102,    "Outbound"
Rem    BIDIRECT  ,    103,    "BiDirectional"
Rem TRANEND

Rem TRANBEGIN iEmulationMode
Rem    NOEMU     ,   196,    "No Emulation"
Rem    LOOP      ,   197,    "Loopback"
Rem    FULLEMU   ,   198,    "Full Emulation"
Rem TRANEND

Rem TRANBEGIN iEmptyFlag
Rem    UNOCCUPIED  ,    21,    "Empty"
Rem    OCCUPIED    ,    22,    "Occupied"
Rem    LCRESERVED  ,    23,    "Reserved"
Rem    LC_SWAP     ,    24,    "Swap"
Rem    LC_DDMOVE   ,    25,    "Double-Deep Movement"
Rem TRANEND

Rem TRANBEGIN iOccupiedStatus
Rem    UNOCCUPIED  ,    21,    "Empty"
Rem    OCCUPIED    ,    22,    "Occupied"
Rem    LCRESERVED  ,    23,    "Reserved"
Rem    LC_SWAP     ,    24,    "Swap"
Rem    LC_DDMOVE   ,    25,    "Double-Deep Movement"
Rem TRANEND

Rem TRANBEGIN iEnabled
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iExpirationRequired
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iFromType
Rem   EQUIPMENT ,   231,    "Equipment Route"
Rem   STATION   ,   232,    "Station Route"
Rem TRANEND

Rem TRANBEGIN iHoldType
Rem    ITMAVAIL  ,   168,    "Available"
Rem    ITMHOLD   ,   169,    "Hold"
Rem    ITMREJECT ,   170,    "Reject Load Marker Item"
Rem    SHIPHOLD  ,   171,    "Shipping"
Rem    QCHOLD    ,   172,    "QCHold"
Rem TRANEND

Rem TRANBEGIN iHostDataFormat
Rem    DELIMITED   , 430,    "Delimited"
Rem    FIXEDLENGTH , 431,    "FixedLength"
Rem    XML         , 432,    "XML"
Rem TRANEND

Rem TRANBEGIN iJVMStatus
Rem    JVM_UNUSED      ,   460,  "JVM is not being used."
Rem    JVM_INUSE       ,   461,  "JVM is in use."
Rem    JVM_DISABLED    ,   462,  "JVM usage is temporarily disabled"
Rem TRANEND

Rem TRANBEGIN iJVMType
Rem    PRIMARY_JVM     ,   560,  "Primary JVM"
Rem    SECONDARY_JVM   ,   561,  "Secondary JVM"
Rem TRANEND

Rem TRANBEGIN iMessageProcessed
Rem    YES        , 1,    "Yes"
Rem    NO         , 2,    "No"
Rem    PROC_ERROR , 3,    "Processing Error"
Rem TRANEND

Rem TRANBEGIN iInspection
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iLineShy
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iLoadPresenceCheck
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iLoadMoveStatus
Rem    IDPENDING       ,   219,    "ID Pending"
Rem    ARRIVEPENDING   ,   220,    "Arrival Pending"
Rem    STOREPENDING    ,   221,    "Store Pending"
Rem    RETRIEVEPENDING ,   222,    "Retrieve Pending"
Rem    RETRIEVESENT    ,   223,    "Retrieve Message Sent"
Rem    NOMOVE          ,   224,    "No Move"
Rem    RETRIEVING      ,   225,    "Retrieving"
Rem    STORING         ,   226,    "Storing"
Rem    STORESENT       ,   227,    "Store Sent"
Rem    MOVING          ,   228,    "Moving"
Rem    RETRIEVEERROR   ,   229,    "Retrieve Error"
Rem    STOREERROR      ,   230,    "Store Error"
Rem    ARRIVED         ,   231,    "Arrived"
Rem    STAGED          ,   232,    "Staged"
Rem    SHIPWAIT        ,   233,    "ShipWait"
Rem    SHIPPING        ,   234,    "Shipping"
Rem    PICKED          ,   235,    "Picked"
Rem    ERROR           ,   236,    "Error"
Rem    CONSOLIDATING   ,   237,    "Consolidating"
Rem    CONSOLIDATED    ,   238,    "Consolidated"
Rem    RECEIVED        ,   239,    "Received"
Rem    RECEIVECHECKED  ,   240,    "Received and Checked"
Rem    BUILDING        ,   241,    "Building"
Rem    MOVEPENDING     ,   242,    "Move Pending"
Rem    MOVEERROR       ,   243,    "Move Error"
Rem    MOVESENT        ,   244,    "Move Sent"
Rem    BINFULL_ERROR   ,   245,    "Bin Full Error"
Rem    SIZE_ERROR      ,   246,    "Size Mismatch Error"
Rem TRANEND

Rem TRANBEGIN iLocationDepth
Rem   LC_SINGLE  ,   1 ,    "Single"
Rem   LC_BACK    ,   2 ,    "Outer"
Rem   LC_FRONT   ,   3 ,    "Inner"
Rem TRANEND

-- This is used by the LocationMaintFrame.  It is not a database field.
Rem TRANBEGIN iLocationMaint
Rem   IGNORE  ,   555 ,    "Ignore"
Rem   EQUALS  ,   556 ,    "Equals"
Rem   SET     ,   557 ,    "Set"
Rem TRANEND

Rem TRANBEGIN iLocationOrder
Rem    FRONT_TO_BACK     ,   302,    "Order Front To Back"
Rem    BACK_TO_FRONT     ,   303,    "Order Back To Front"
Rem TRANEND

Rem TRANBEGIN iLocationStatus
Rem    LCAVAIL     ,  29 ,    "Available"
Rem    LCUNAVAIL   ,  30 ,    "Unavailable"
Rem    LCPROHIBIT  ,  31 ,    "Prohibited"
Rem TRANEND

Rem TRANBEGIN iLocationType
Rem    LCASRS,          10,    "ASRS Location"
Rem    LCSTATION ,      11,    "Station Location"
Rem    LCFLOW    ,      12,    "Flow Rack"
Rem    LCSHIPPING,      13,    "Shipping Location"
Rem    LCRECEIVING,     14,    "Receiving Location"
Rem    LCCONSOLIDATION, 15,    "Consolidation Location"
Rem    LCSTAGING,       16,    "Staging Location"
Rem    LCDEDICATED,     17,    "Dedicated Location"
Rem    LCDEVICE,        18,    "Device Location"
Rem    LCCONVSTORAGE,   19,    "Conventional Storage"
Rem TRANEND

Rem TRANBEGIN iLocnOrderStrategy
Rem    RANDOM     ,   245,    "Random Location Ordering"
Rem    FIXED      ,   246,    "Fixed Location Order"
Rem TRANEND

Rem TRANBEGIN iModifyAllowed
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iMoveCategory
Rem    STORE_REQUEST          ,  125,   "Store Request"
Rem    PICK_REQUEST           ,  126,   "Pick Request"
Rem    CYCLECOUNT_REQUEST     ,  127,   "Cycle-Count Request"
Rem    REPLENISHMENT_REQUEST  ,  128,   "Replenishment Request"
Rem    ANY_REQUEST            ,  129,   "Any Work Request"
Rem    CARTPICK_REQUEST       ,  130,   "Cart-Pick Request"
Rem TRANEND

Rem TRANBEGIN iMoveStatus
Rem    AVAILABLE ,    32,    "Available"
Rem    ASSIGNED  ,    33,    "Assigned"
Rem TRANEND

Rem TRANBEGIN iMoveType
Rem    LOADMOVE          , 60,    "Load Move"  -- Either load out move or WMS type
Rem    ITEMMOVE          , 61,    "Item Move"  -- Item Picking.
Rem    EMPTYMOVE         , 62,    "Empty Cont. Move"
Rem    CYCLECOUNTMOVE    , 63,    "Cycle-Count Move"
Rem    REPLENISHMENTMOVE , 64,    "Replenishment Move"
Rem TRANEND

Rem TRANBEGIN iMultipleLoad
Rem    YES       ,     1,  "Yes"
Rem    NO        ,     2,  "No"
Rem TRANEND

Rem TRANBEGIN iOneLoadPerLoc
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iOperationalStatus
Rem    APPONLINE    ,   186,    "Online"
Rem    APPOFFLINE   ,   187,    "Offline"
Rem    INOP         ,   188,    "Inoperable"
Rem TRANEND

Rem TRANBEGIN iOrderType
Rem    ITEMORDER     ,    1,    "Item Order"
Rem    REPLENISHMENT ,    2,    "Replenishment Order"
Rem    CONTAINER     ,    4,    "Container Order"
Rem    FULLLOADOUT   ,    8,    "Full Load Order"
Rem    CYCLECOUNT    ,    16,   "Cycle Count Order"
Rem TRANEND

Rem TRANBEGIN iOrderStatus
Rem    ORBUILDING  ,    229,   "Building"
Rem    HOLD        ,    230,   "Hold"
Rem    LOCWAIT     ,    231,   "Waiting For Location"
Rem    SHORTLOCWAIT,    232,   "Short (Waiting for Location)"
Rem    READY       ,    233,   "Ready"
Rem    ALLOCATENOW ,    234,   "Allocate Immediately"
Rem    ALLOCATING  ,    235,   "Allocating"
Rem    SCHEDULED   ,    236,   "Scheduled"     -- When Scheduler gets order.
Rem    REALLOC     ,    237,   "Reallocate"
Rem    SHORT       ,    238,   "Short"
Rem    PICKCOMP    ,    239,   "Pick Complete"
Rem    KILLED      ,    240,   "Killed"
Rem    DONE        ,    241,   "Done"
Rem    ORERROR     ,    242,   "In Error"
Rem    UNKNOWN     ,    243,   "Unknown"       -- Only meaningful for Host mesg.
Rem TRANEND

Rem TRANBEGIN iNextStatus
Rem    ORBUILDING  ,    229,   "Building"
Rem    HOLD        ,    230,   "Hold"
Rem    LOCWAIT     ,    231,   "Waiting For Location"
Rem    SHORTLOCWAIT,    232,   "Short (Waiting for Location)"
Rem    READY       ,    233,   "Ready"
Rem    ALLOCATENOW ,    234,   "Allocate Immediately"
Rem    ALLOCATING  ,    235,   "Allocating"
Rem    SCHEDULED   ,    236,   "Scheduled"     -- When Scheduler gets order.
Rem    REALLOC     ,    237,   "Reallocate"
Rem    SHORT       ,    238,   "Short"
Rem    PICKCOMP    ,    239,   "Pick Complete"
Rem    KILLED      ,    240,   "Killed"
Rem    DONE        ,    241,   "Done"
Rem    ORERROR     ,    242,   "In Error"
Rem    UNKNOWN     ,    243,   "Unknown"       -- Only meaningful for Host mesg.
Rem TRANEND

Rem TRANBEGIN iNotifyHost
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iPhysicalStatus
Rem    ONLINE       ,   233,    "Online"
Rem    OFFLINE      ,   234,    "Offline"
Rem    DISCONNECTED ,   235,    "Disconnected"
Rem    ERROR        ,   236,    "Error"
Rem TRANEND

Rem TRANBEGIN iPoReceiveAll
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iPriorityAllocation
Rem    YES       ,     1,    "Yes"
Rem    NO        ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iPriorityCategory
Rem   URGENT_RETRIEVAL     ,   1,  "Urgent Retrieval"
Rem   PLANNED_RETRIEVAL    ,   2,  "Planned Retrieval"
Rem   EMPTY_LOCATION_CHECK ,   9,  "Empty Location Check"
Rem TRANEND

Rem TRANBEGIN iPurchaseOrderStatus
Rem    ERBUILDING  ,    24,    "Building"
Rem    ERHISTORY   ,    25,    "History"
Rem    ERCOMPLETE  ,    26,    "Complete"
Rem    EREXPECTED  ,    27,    "Expected"
Rem    ERFORCED    ,    28,    "Forced Close"
Rem    NONEXIST    ,    29,    "Non-Existent"
Rem    ERPENDING   ,    30,    "Pending"
Rem    ERRECEIVING ,    31,    "Receiving"
Rem TRANEND

Rem TRANBEGIN iReasonCategory
Rem    REASONHOLD   ,     10,    "Hold Inventory"
Rem    REASONADJUST ,     11,    "Adjust Inventory"
Rem    REASONCUSTOM ,     12,    "Custom Reason"
Rem TRANEND

Rem TRANBEGIN iReInputFlag
Rem    NO_REINPUT       ,     0,    "No Reinputting"
Rem    REINPUT_SAME_LOC ,     1,    "Reinput To Same Bin"
Rem TRANEND

Rem TRANBEGIN iRememberLastLogin
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iReplenishNow
Rem    DLACTIVE  ,     11,    "Active"
Rem    DLWAIT    ,     12,    "Waiting"
Rem    DLINACTIVE,     13,    "Inactive"
Rem    DLUNREPLEN,     14,    "Unreplenishing"
Rem TRANEND

Rem TRANBEGIN iReplenishType
Rem    UNIT        , 85, "Unit"       -- Alloc by Item Master Unit setting
Rem    LOAD        , 86, "Load"       -- Alloc Item Det. to nearest load
Rem    PIECE       , 87, "Piece"      -- Alloc by piece.
Rem    INNER_PACK  , 90, "Inner Pack" -- Alloc by Item Master Inner Pack Setting
Rem TRANEND

Rem TRANBEGIN iRetrieveCommandDetail
Rem    INVENTORY_CHECK   , 0,   "Inventory Check"
Rem    UNIT_RETRIEVAL    , 1,   "Unit Retrieval"
Rem    PICKING_RETRIEVAL , 2,   "Picking Retrieval"
Rem    ADDING_RETRIEVAL  , 3,   "Adding Retrieval"
Rem TRANEND

Rem TRANBEGIN iRoleType
Rem   WORKER     ,  55,    "Worker"
Rem   CREATOR    ,  56,    "Creator"
Rem   SUPER_USER ,  57,    "Super User"
Rem TRANEND

Rem TRANBEGIN iRouteOnOff
Rem   ON   ,   35,    "On"
Rem   OFF  ,   36,    "Off"
Rem TRANEND

Rem TRANBEGIN iScreenChangeAllowed
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iSequenceType
Rem    HOST_SEQ   ,   370,    "Host Message Sequencer"
Rem    DEVICE_SEQ ,   371,    "Device Message Sequencer"
Rem    OTHER_SEQ  ,   372,    "Other Sequencer"
Rem TRANEND

Rem TRANBEGIN iShipmentStatus
Rem    SHIPMENTBUILD,  158,    "Building"
Rem    SHIPMENTHOLD,   159,    "Hold"
Rem    SHIPMENTOPEN,   160,    "Open"
Rem    SHIPMENTCLOSED, 161,    "Closed"
Rem TRANEND

Rem TRANBEGIN iSimulate
Rem   ON   ,   35,    "On"
Rem   OFF  ,   36,    "Off"
Rem TRANEND

Rem TRANBEGIN iStationType
Rem    USHAPE_IN     ,   220,    "U-Shape In"
Rem    USHAPE_OUT    ,   221,    "U-Shape Out"
Rem    PDSTAND       ,   222,    "P&D Stand"
Rem    OUTPUT        ,   223,    "Output"
Rem    INPUT         ,   224,    "Input"
Rem    REVERSIBLE    ,   225,    "Reversible"
Rem    CONSOLIDATION ,   226,    "Consolidation"
Rem    CONVEYOR      ,   227,    "Conveyor Station"
Rem    SHIPPING      ,   228,    "Shipping"
Rem    TRANSFER_STATION, 229,    "Transfer Station"
Rem    AGC_TRANSFER  ,   230,    "AGC Transfer Station"
Rem    AGV_STATION   ,   231,    "AGV Station"
Rem    PTL_INPUT     ,   232,    "PTL Input"
Rem    PTL_OUTPUT    ,   233,    "PTL Output"
Rem TRANEND

Rem TRANBEGIN iStatus
Rem    STNOFFLINE       ,   200,    "Offline"
Rem    CAPTIVEINSERT    ,   201,    "Captive Insert"
Rem    STORERETRIEVE    ,   202,    "Store+Retrieve"
Rem TRANEND

Rem TRANBEGIN iStorageFlag
Rem    MIXALL         ,   242,  "Any Item - Any Lot"
Rem    ONELOT_PERITEM ,   243,  "One Lot Per Item"
Rem    MIXLOTS_ONEITEM,   244,  "One Item-Mixed Lots"
Rem    ONELOT_ONEITEM ,   245,  "One Item-One Lot"
Rem TRANEND

-- This is used by the SwapZoneMaintenanceFrame.  It is not a database field.
Rem TRANBEGIN iSwapZoneStatus
Rem   SWAP_BROKEN     ,   1 ,    "Broken"
Rem   SWAP_HEALTHY    ,   2 ,    "Healthy"
Rem   SWAP_SWAP_FRONT ,   3 ,    "Swapping Front Load"
Rem   SWAP_SWAP_BACK  ,   4 ,    "Retrieving Back Load"
Rem TRANEND

Rem TRANBEGIN iTranCategory
Rem    LOAD_TRAN       ,   770,  "Load Movement"
Rem    ORDER_TRAN      ,   771,  "Ordering"
Rem    USER_TRAN       ,   772,  "User"
Rem    INVENTORY_TRAN  ,   773,  "Inventory"
Rem    SYSTEM_TRAN     ,   774,  "System"
Rem TRANEND

Rem TRANBEGIN iTranType
Rem    ADD                         ,   880,  "Generic Add Data"
Rem    COMPLETION                  ,   881,  "Completion"
Rem    COUNT                       ,   882,  "Counting"
Rem    CYCLE_COUNT                 ,   883,  "Cycle Counting"
Rem    DELETE                      ,   884,  "Generic Delete Data"
Rem    ITEM_PICK                   ,   885,  "Item Picking"
Rem    ITEM_RECEIPT                ,   886,  "Item Receipt"
Rem    ITEM_SHIP                   ,   887,  "Item Ship"
Rem    LOGIN                       ,   888,  "User Login"
Rem    LOGOUT                      ,   889,  "User Logout"
Rem    MODIFY                      ,   890,  "Generic Modify Data"
Rem    TRANSFER                    ,   891,  "Transfer Inventory/Load"
Rem    ADD_ORDER                   ,   892,  "Add Order"
Rem    ADD_LOAD                    ,   893,  "Add Load"
Rem    ADD_ITEM                    ,   894,  "Add Inventory"
Rem    MODIFY_ORDER                ,   895,  "Modify Order"
Rem    MODIFY_LOAD                 ,   896,  "Modify Load"
Rem    MODIFY_ITEM                 ,   897,  "Modify Inventory"
Rem    DELETE_ORDER                ,   898,  "Delete Order"
Rem    DELETE_LOAD                 ,   899,  "Delete Load"
Rem    DELETE_ITEM                 ,   900,  "Delete Inventory"
Rem    LOAD_SCHED                  ,   901,  "Load Schedule"
Rem    ADD_ORDER_LINE              ,   902,  "Add Order Line"
Rem    MODIFY_ORDER_LINE           ,   903,  "Modify Order Line"
Rem    DELETE_ORDER_LINE           ,   904,  "Delete Order Line"
Rem    ADD_ITEM_MASTER             ,   905,  "Add Item Master"
Rem    MODIFY_ITEM_MASTER          ,   906,  "Modify Item Master"
Rem    DELETE_ITEM_MASTER          ,   907,  "Delete Item Master"
Rem    ADD_EXPECTED_RECEIPT        ,   908,  "Add Expected Receipt"
Rem    MODIFY_EXPECTED_RECEIPT     ,   909,  "Modify Expected Receipt"
Rem    DELETE_EXPECTED_RECEIPT     ,   910,  "Delete Expected Receipt"
Rem    ADD_EXPECTED_RECEIPT_LINE   ,   911,  "Add Expected Receipt Line"
Rem    MODIFY_EXPECTED_RECEIPT_LINE,   912,  "Modify Expected Receipt Line"
Rem    DELETE_EXPECTED_RECEIPT_LINE,   913,  "Delete Expected Receipt Line"
Rem TRANEND

-- Wynsoft AE System Global Settings Types
Rem TRANBEGIN typeid
Rem    GS_SELECTION,     0,    "Selection"
Rem    GS_INTEGER  ,     1,    "Integer"
Rem    GS_STRING   ,     2,    "String"
Rem    GS_DATETIME ,     3,    "DateTime"
Rem    GS_BOOLEAN  ,     4,    "Boolean"
Rem    GS_DOUBLE   ,     5,    "Double"
Rem TRANEND

Rem TRANBEGIN iViewAllowed
Rem    YES  ,     1,    "Yes"
Rem    NO   ,     2,    "No"
Rem TRANEND

Rem TRANBEGIN iWarehouseStatus
Rem    WARAVAIL  ,   240,    "Available"
Rem    WARHOLD   ,   241,    "Hold"
Rem TRANEND

Rem TRANBEGIN iWarehouseType
Rem    SUPER    ,   63,    "Super Warehouse"
Rem    REGULAR  ,   64,    "Regular Warehouse"
Rem TRANEND
